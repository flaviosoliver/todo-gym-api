var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.601,1,2.72]],["body/controllers/AppController.html",[0,2.661,1,4.522,2,2.163,3,0.217,4,0.217,5,0.193,6,4.484,7,0.347,8,2.428,9,6.235,10,1.46,11,0.016,12,0.912,13,5.188,14,1.973,15,1.024,16,0.362,17,1.288,18,4.223,19,4.484,20,0.217,21,0.054,22,5.188,23,2.065,24,1.806,25,5.188,26,0.013,27,0.013]],["title/modules/AppModule.html",[28,1.601,29,2.72]],["body/modules/AppModule.html",[1,4.068,2,2.075,3,0.149,4,0.149,5,0.132,11,0.016,16,0.415,17,0.882,18,4.145,19,3.073,20,0.149,21,0.037,24,1.237,26,0.01,27,0.01,28,2.394,29,5.423,30,1.814,31,2.036,32,2.329,33,2.329,34,2.036,35,3.289,36,2.036,37,3.073,38,3.073,39,3.073,40,4.446,41,4.145,42,4.446,43,4.446,44,4.145,45,3.26,46,2.329,47,2.329,48,3.554,49,3.507,50,2.329,51,1.237,52,4.301,53,5.376,54,2.755,55,3.554,56,3.554,57,3.073,58,3.073,59,3.554,60,3.554,61,3.554,62,3.554,63,3.073,64,1.293,65,1.203,66,3.554,67,3.554,68,3.554,69,3.554,70,4.976,71,3.554,72,1.918,73,3.554,74,3.554,75,3.554,76,1.633]],["title/injectables/AppService.html",[18,2.346,77,0.953]],["body/injectables/AppService.html",[3,0.226,4,0.226,5,0.201,7,0.362,8,2.488,9,6.322,11,0.016,12,0.95,14,2.054,15,1.05,16,0.306,17,1.341,18,3.996,20,0.226,21,0.056,24,1.88,26,0.013,27,0.013,77,1.624,78,2.252,79,4.669,80,5.401,81,5.401,82,5.401]],["title/classes/Auth.html",[21,0.04,83,2.2]],["body/classes/Auth.html",[3,0.19,4,0.19,5,0.169,7,0.304,10,1.651,11,0.016,12,1.031,15,1.206,16,0.332,20,0.272,21,0.047,26,0.012,27,0.012,51,1.579,65,0.951,83,3.936,84,1.449,85,3.214,86,0.856,87,2.076,88,4.604,89,0.592,90,4.546,91,3.936,92,3.63,93,4.536,94,4.536,95,3.508,96,2.695,97,2.599,98,3.36,99,1.984,100,3.516,101,2.972,102,2.599,103,3.214,104,3.921]],["title/controllers/AuthController.html",[0,1.601,105,2.72]],["body/controllers/AuthController.html",[0,1.588,2,1.588,3,0.16,4,0.16,5,0.142,7,0.255,8,1.985,10,1.072,11,0.016,12,0.67,14,1.448,16,0.402,17,0.945,20,0.16,21,0.04,23,1.515,24,1.325,26,0.011,27,0.011,64,2.166,65,0.798,76,1.75,83,2.181,87,1.216,89,0.495,105,3.697,106,3.291,107,2.697,108,3.697,109,3.807,110,4.197,111,3.807,112,2.697,113,2.697,114,2.697,115,2.697,116,3.637,117,2.37,118,3.807,119,1.588,120,0.833,121,1.072,122,4.218,123,1.242,124,2.697,125,3.697,126,3.697,127,3.697,128,3.697,129,3.697,130,2.697,131,3.697,132,1.166,133,2.495,134,3.419,135,2.951,136,3.697,137,3.807,138,3.188,139,3.188,140,3.188,141,3.188,142,2.697,143,2.326,144,2.697,145,3.807,146,1.216,147,3.807,148,3.807,149,1.75,150,1.515,151,3.807,152,1.943,153,2.697,154,3.246,155,3.807,156,2.663,157,1.515,158,3.807]],["title/classes/AuthDto.html",[21,0.04,159,2.72]],["body/classes/AuthDto.html",[3,0.206,4,0.206,5,0.183,7,0.33,10,1.739,11,0.016,12,1.086,15,1.136,16,0.35,20,0.206,21,0.064,26,0.013,27,0.013,84,1.572,86,0.902,87,2.157,88,4.783,89,0.514,132,1.507,159,4.377,160,4.255,161,3.816,162,4.922,163,3.007,164,4.922,165,2.568,166,3.266,167,4.048,168,3.266,169,3.445,170,1.959]],["title/modules/AuthModule.html",[28,1.601,40,2.516]],["body/modules/AuthModule.html",[2,2.043,3,0.146,4,0.146,5,0.129,11,0.017,16,0.43,17,0.863,20,0.146,21,0.036,26,0.01,27,0.01,28,2.366,30,1.774,31,1.992,32,2.279,33,2.279,34,1.992,35,3.251,36,1.992,40,4.632,44,4.116,45,3.211,46,2.279,47,2.279,49,3.466,50,2.279,51,1.211,52,4.236,53,5.325,54,2.696,58,3.006,63,3.006,64,1.265,76,1.598,83,1.992,96,1.598,103,3.472,105,4.02,120,0.761,133,3.211,135,2.696,150,1.384,171,3.006,172,3.477,173,3.006,174,4.415,175,3.477,176,4.236,177,3.477,178,2.696,179,3.477,180,3.472,181,3.477,182,3.472,183,3.477,184,3.211,185,2.696,186,2.696,187,2.645,188,3.006,189,2.807,190,3.477,191,3.477,192,2.464,193,3.477,194,3.477,195,3.477,196,3.477,197,3.477,198,3.477,199,3.477,200,4.02,201,4.02,202,3.477]],["title/injectables/AuthRepository.html",[77,0.953,182,2.72]],["body/injectables/AuthRepository.html",[3,0.188,4,0.188,5,0.167,7,0.301,8,2.217,11,0.016,12,1.025,14,1.709,16,0.402,17,1.116,20,0.188,21,0.047,23,1.789,24,1.565,26,0.012,27,0.012,51,1.565,64,2.353,77,1.447,78,1.874,83,4.064,89,0.485,99,1.966,100,3.484,119,2.431,120,1.275,121,1.641,123,1.388,149,2.065,150,2.32,157,1.789,182,4.13,185,3.484,186,3.484,203,3.885,204,1.785,205,3.184,206,5.149,207,4.494,208,5.829,209,4.494,210,3.184,211,3.819,212,4.494,213,4.494]],["title/injectables/AuthService.html",[77,0.953,180,2.72]],["body/injectables/AuthService.html",[3,0.122,4,0.122,5,0.109,7,0.196,8,1.644,11,0.016,12,1.066,14,1.956,15,1.14,16,0.382,17,0.725,20,0.122,21,0.03,23,2.413,24,1.79,26,0.009,27,0.009,64,1.87,65,1.271,76,1.343,77,1.073,78,1.218,86,0.631,87,1.937,88,4.296,89,0.473,108,3.061,117,2.261,119,2.369,120,1.243,121,1.599,122,2.07,123,1.029,134,2.831,135,2.265,146,0.933,149,1.343,150,1.72,152,3.239,156,2.899,157,2.047,159,3.061,178,2.265,180,3.061,184,1.915,185,2.265,187,1.577,188,2.526,189,2.946,211,3.723,214,2.526,215,4.025,216,3.735,217,3.735,218,2.07,219,3.255,220,6.567,221,4.321,222,3.061,223,4.321,224,2.922,225,2.067,226,4.321,227,2.922,228,4.321,229,2.922,230,1.915,231,1.915,232,3.273,233,4.321,234,3.061,235,3.735,236,2.265,237,2.922,238,2.922,239,2.922,240,2.265,241,2.526,242,2.922,243,2.526,244,3.986,245,2.922,246,2.922,247,2.07,248,2.526,249,2.946,250,2.922,251,4.321,252,2.922,253,2.265,254,2.922,255,2.922,256,2.922,257,2.07,258,1.915,259,2.07]],["title/classes/CreateExerciseDto.html",[21,0.04,260,1.959]],["body/classes/CreateExerciseDto.html",[3,0.171,4,0.171,5,0.152,7,0.273,10,1.934,11,0.016,12,1.208,15,1.206,16,0.31,20,0.171,21,0.057,26,0.011,27,0.011,84,1.302,86,0.798,89,0.572,120,1.349,121,1.991,132,1.248,165,2.69,166,2.982,168,2.643,169,3.506,170,1.622,260,2.788,261,6.114,262,3.523,263,3.146,264,4.368,265,3.767,266,4.368,267,2.49,268,4.076,269,4.724,270,4.076,271,3.159,272,4.076,273,3.523,274,4.076,275,4.076,276,3.339,277,3.339,278,4.317,279,5.33]],["title/classes/CreatePlanDto.html",[21,0.04,280,2.072]],["body/classes/CreatePlanDto.html",[3,0.178,4,0.178,5,0.158,7,0.285,10,1.887,11,0.016,12,1.179,15,1.149,16,0.357,20,0.178,21,0.059,26,0.012,27,0.012,84,1.359,86,0.821,89,0.558,120,1.378,121,1.583,132,1.303,163,2.6,165,2.651,166,3.242,168,3.047,169,3.215,170,1.694,263,3.215,267,2.6,276,3.436,277,3.849,278,3.686,280,3.036,281,6.025,282,3.679,283,4.102,284,4.464,285,4.256,286,4.256,287,3.679,288,4.256,289,2.789,290,4.256,291,3.686,292,3.679]],["title/classes/CreateUserDto.html",[21,0.04,293,1.959]],["body/classes/CreateUserDto.html",[3,0.155,4,0.155,5,0.137,7,0.247,10,1.981,11,0.016,12,1.238,15,1.183,16,0.332,20,0.155,21,0.053,26,0.01,27,0.01,84,1.179,86,0.745,87,1.871,89,0.586,132,1.13,156,2.989,165,2.729,166,3.47,167,3.347,168,3.404,169,3.386,170,1.469,267,2.255,271,4.541,276,3.12,277,3.12,293,2.606,294,6.201,295,3.19,296,3.838,297,4.15,298,4.15,299,4.15,300,3.058,301,3.347,302,3.19,303,3.69,304,3.69,305,3.69,306,3.69,307,3.69,308,3.69,309,3.69,310,3.69,311,2.833,312,3.69,313,3.619,314,3.959,315,3.69]],["title/classes/Exercise.html",[21,0.04,316,1.679]],["body/classes/Exercise.html",[3,0.225,4,0.132,5,0.117,7,0.212,10,1.836,11,0.016,12,1.147,15,1.239,16,0.259,20,0.225,21,0.033,26,0.009,27,0.009,51,1.1,65,0.662,72,3.521,84,1.009,86,0.668,89,0.618,91,4.087,92,3.193,95,3.521,96,2.102,97,1.809,98,1.809,101,2.069,102,1.809,120,1.29,121,1.836,132,0.967,154,3.156,165,2.559,263,2.744,264,4.177,265,3.823,266,4.177,316,3.25,317,2.238,318,1.689,319,4.275,320,3.954,321,3.954,322,2.448,323,1.528,324,3.158,325,3.158,326,5.896,327,5.896,328,3.158,329,3.158,330,2.448,331,3.158,332,3.158,333,3.158,334,3.158,335,3.158,336,2.448,337,2.069,338,2.238,339,2.73]],["title/classes/ExerciseDto.html",[21,0.04,340,1.857]],["body/classes/ExerciseDto.html",[3,0.165,4,0.165,5,0.147,7,0.264,10,1.971,11,0.016,12,1.232,15,1.219,16,0.303,20,0.165,21,0.056,26,0.011,27,0.011,84,1.259,86,0.78,89,0.583,120,1.326,121,1.971,132,1.207,165,2.724,166,3.144,168,2.932,169,3.574,170,1.569,263,3.093,264,4.295,265,3.704,266,4.295,267,2.408,269,4.619,271,3.056,273,3.408,276,3.265,277,3.265,278,4.259,279,5.24,289,2.583,291,3.502,318,1.636,340,2.585,341,3.408,342,3.942,343,3.942,344,3.942,345,3.942,346,3.942,347,3.942]],["title/controllers/ExercisesController.html",[0,1.601,348,2.72]],["body/controllers/ExercisesController.html",[0,0.9,2,0.9,3,0.09,4,0.09,5,0.08,7,0.145,8,1.303,10,1.488,11,0.016,12,0.93,14,2.011,15,0.903,16,0.357,17,0.536,20,0.09,21,0.022,23,0.859,24,1.841,26,0.007,27,0.007,64,2.536,65,0.718,76,0.992,89,0.566,107,1.529,112,3.746,113,3.746,114,3.434,115,3.434,116,3.85,119,2.021,120,1.157,121,1.364,123,1.537,124,2.427,125,2.427,126,3.986,127,3.746,128,3.986,129,3.986,130,1.529,131,3.986,132,0.661,138,3.437,139,3.437,140,3.437,141,3.23,142,1.529,143,1.318,144,1.529,146,0.689,149,0.992,150,0.859,152,1.101,153,1.529,154,3.586,157,2.104,204,1.049,232,1.849,249,1.962,260,2.871,316,3.015,318,1.427,323,2.06,337,1.414,340,2.853,348,2.427,349,1.866,350,2.092,351,1.616,352,1.574,353,1.776,354,1.673,355,1.673,356,2.79,357,1.673,358,2.158,359,1.673,360,2.345,361,2.158,362,2.158,363,2.44,364,1.866,365,1.673,366,2.158,367,1.318,368,1.866,369,2.158,370,1.318,371,1.866,372,1.866,373,2.158,374,1.673,375,1.866,376,1.529,377,1.866,378,1.866,379,4.362,380,2.655,381,1.673,382,1.414,383,1.237,384,2.092,385,1.673,386,2.427,387,2.158,388,1.529,389,1.673,390,2.158,391,2.158,392,1.866,393,4.098,394,1.673,395,2.158,396,2.158,397,2.158,398,2.158,399,1.318,400,1.866,401,2.244,402,1.866,403,1.866,404,1.866,405,1.529,406,1.673,407,2.158,408,1.866,409,1.866,410,1.866]],["title/modules/ExercisesModule.html",[28,1.601,41,2.346]],["body/modules/ExercisesModule.html",[2,2.445,3,0.19,4,0.19,5,0.169,11,0.017,16,0.426,17,1.126,20,0.19,21,0.047,26,0.012,27,0.012,28,2.445,30,2.315,35,2.599,36,2.599,41,3.583,49,2.771,50,2.972,51,1.579,96,2.085,120,0.992,192,3.214,200,4.155,201,4.155,316,1.984,338,4.155,348,4.604,383,3.723,385,3.516,388,3.214,411,4.536,412,3.583,413,4.536,414,4.536,415,4.258,416,3.516,417,4.155,418,4.536,419,3.921]],["title/injectables/ExercisesRepository.html",[77,0.953,417,2.72]],["body/injectables/ExercisesRepository.html",[3,0.138,4,0.138,5,0.122,7,0.22,8,1.788,11,0.016,12,1.162,14,2.416,15,1.061,16,0.386,17,0.814,20,0.138,21,0.034,23,1.306,24,2.089,26,0.01,27,0.01,51,1.142,64,2.737,77,1.167,78,1.368,89,0.529,99,1.435,119,2.648,120,1.389,121,1.788,123,1.712,146,1.048,149,1.507,150,1.871,157,2.528,204,1.439,205,2.324,206,4.682,210,2.324,260,3.061,316,2.891,318,1.483,336,2.543,340,2.902,350,2.872,351,2,352,2.16,353,1.96,354,3.644,359,3.644,360,2.902,363,1.879,367,2.872,370,2.872,388,2.324,389,2.543,416,2.543,417,3.33,420,2.835,421,3.28,422,3.28,423,3.28,424,3.28,425,3.28,426,3.28,427,3.08,428,3.28,429,3.28,430,2.543,431,2.835,432,3.28,433,2.835,434,2.543]],["title/injectables/ExercisesService.html",[77,0.953,412,2.346]],["body/injectables/ExercisesService.html",[3,0.099,4,0.099,5,0.088,7,0.159,8,1.401,11,0.017,12,1.074,14,2.102,15,0.939,16,0.358,17,0.588,20,0.099,21,0.038,23,2.03,24,2.037,26,0.008,27,0.008,64,2.585,65,1.069,76,1.088,77,0.914,78,0.987,86,0.537,89,0.46,119,2.44,120,1.209,121,1.555,123,1.579,146,0.756,149,1.088,150,1.466,152,2.602,157,2.431,170,0.942,204,1.127,215,3.613,218,1.677,222,2.609,230,1.551,231,1.551,232,3.502,234,1.677,247,3.915,249,3.499,257,3.915,258,4.002,259,3.915,260,2.602,316,2.901,318,1.751,323,1.781,337,2.962,340,2.467,350,2.25,351,1.7,352,1.692,353,1.536,354,2.855,359,2.855,360,2.467,363,2.11,364,2.046,367,2.25,370,2.25,376,1.677,384,2.25,385,1.835,389,1.835,399,2.25,400,2.046,401,2.413,405,1.677,412,2.25,415,1.551,416,1.835,427,3.342,435,2.046,436,3.682,437,2.367,438,2.367,439,2.367,440,2.367,441,2.367,442,3.682,443,1.835,444,2.367,445,1.677,446,1.835,447,2.367,448,2.367,449,2.367,450,1.835,451,2.367,452,2.367,453,2.367,454,2.367,455,2.367,456,3.183,457,3.183,458,1.835,459,2.367,460,1.835,461,2.367,462,1.835,463,1.835,464,2.367,465,1.835,466,1.835,467,2.855,468,2.046,469,2.046,470,2.046]],["title/interfaces/IAuthController.html",[136,2.72,471,0.876]],["body/interfaces/IAuthController.html",[3,0.226,4,0.226,5,0.2,7,0.36,11,0.016,16,0.305,20,0.274,26,0.013,27,0.013,65,1.128,86,0.952,89,0.448,108,5.175,110,4.276,122,3.812,123,1.281,136,4.624,146,1.719,471,1.228,472,2.142,473,4.171,474,2.722,475,5.059]],["title/interfaces/IAuthRepository.html",[211,2.516,471,0.876]],["body/interfaces/IAuthRepository.html",[3,0.226,4,0.226,5,0.2,7,0.36,11,0.016,16,0.305,20,0.274,26,0.013,27,0.013,65,1.128,83,4.025,86,0.952,89,0.448,123,1.281,184,4.276,186,4.171,204,2.236,211,4.276,471,1.228,472,2.142,474,2.722,476,4.171]],["title/interfaces/IAuthService.html",[134,2.516,471,0.876]],["body/interfaces/IAuthService.html",[3,0.206,4,0.206,5,0.183,7,0.33,11,0.016,15,1.136,16,0.279,20,0.259,26,0.013,27,0.013,65,1.032,86,0.902,87,1.572,88,3.488,89,0.562,108,5.016,117,2.459,123,1.172,133,4.048,134,4.048,156,2.512,216,6.121,217,6.121,225,1.791,471,1.123,472,1.959,474,3.104,477,3.816,478,4.922]],["title/interfaces/IDefaultController.html",[471,0.876,479,2.976]],["body/interfaces/IDefaultController.html",[3,0.198,4,0.198,5,0.175,7,0.316,11,0.016,15,0.965,20,0.198,26,0.012,27,0.012,86,0.877,89,0.599,122,4.258,123,1.714,204,2.134,318,1.622,351,2.324,353,2.906,471,1.076,472,1.876,474,3.214,479,4.659,480,4.075,481,4.567,482,6.969,483,6.01,484,4.714]],["title/interfaces/IExercisesController.html",[386,2.72,471,0.876]],["body/interfaces/IExercisesController.html",[3,0.184,4,0.184,5,0.164,7,0.295,11,0.016,15,0.922,16,0.363,20,0.241,26,0.012,27,0.012,65,0.922,86,0.839,89,0.586,123,1.677,146,1.405,204,2.079,260,2.933,316,2.801,318,1.551,340,2.78,350,4.148,351,2.264,352,3.12,353,2.831,360,2.78,363,2.52,386,4.072,388,3.116,471,1.004,472,1.751,474,3.177,485,3.409,486,3.409,487,4.455]],["title/interfaces/IExercisesRepository.html",[427,2.516,471,0.876]],["body/interfaces/IExercisesRepository.html",[3,0.187,4,0.187,5,0.166,7,0.299,11,0.016,15,0.932,16,0.329,20,0.243,26,0.012,27,0.012,65,0.936,86,0.847,89,0.589,123,1.685,146,1.427,204,2.091,260,2.962,316,2.539,318,1.567,340,2.808,350,4.172,351,2.277,352,3.138,353,2.848,360,2.808,363,2.559,415,3.804,427,3.804,471,1.019,472,1.778,474,3.185,486,3.462,488,3.462]],["title/interfaces/IExercisesService.html",[384,2.346,471,0.876]],["body/interfaces/IExercisesService.html",[3,0.187,4,0.187,5,0.166,7,0.299,11,0.016,15,0.932,16,0.329,20,0.243,26,0.012,27,0.012,65,0.936,86,0.847,89,0.589,123,1.685,146,1.427,204,2.091,260,2.962,316,2.539,318,1.567,340,2.808,350,4.172,351,2.277,352,3.138,353,2.848,360,2.808,363,2.559,383,3.326,384,3.547,471,1.019,472,1.778,474,3.185,486,3.462,489,3.462]],["title/interfaces/IPlansRepository.html",[471,0.876,490,2.516]],["body/interfaces/IPlansRepository.html",[3,0.212,4,0.212,5,0.188,7,0.339,11,0.016,16,0.356,20,0.263,26,0.013,27,0.013,65,1.061,86,0.917,89,0.523,123,1.496,146,1.617,204,2.189,280,3.392,351,2.384,471,1.155,472,2.014,474,2.982,490,4.118,491,3.923,492,3.316,493,3.316,494,2.731,495,4.118,496,2.582]],["title/interfaces/IPlansService.html",[471,0.876,497,2.516]],["body/interfaces/IPlansService.html",[3,0.212,4,0.212,5,0.188,7,0.339,11,0.016,16,0.356,20,0.263,26,0.013,27,0.013,65,1.061,86,0.917,89,0.523,123,1.496,146,1.617,204,2.189,280,3.392,351,2.384,471,1.155,472,2.014,474,2.982,492,3.316,493,3.316,494,2.731,496,2.582,497,4.118,498,3.923,499,4.118]],["title/interfaces/IUsersController.html",[471,0.876,500,2.72]],["body/interfaces/IUsersController.html",[3,0.173,4,0.173,5,0.153,7,0.276,11,0.016,15,1.107,16,0.312,20,0.231,26,0.011,27,0.011,65,0.864,86,0.804,87,1.317,89,0.603,117,2.192,123,1.725,146,1.317,204,2.026,225,2.256,293,2.81,300,1.994,311,2.664,318,1.786,351,2.207,353,2.76,471,0.941,472,1.641,474,3.225,500,3.901,501,3.195,502,4.043,503,4.043,504,4.043,505,4.043,506,2.92,507,4.269]],["title/interfaces/IUsersRepository.html",[471,0.876,508,2.516]],["body/interfaces/IUsersRepository.html",[3,0.164,4,0.164,5,0.145,7,0.262,11,0.016,15,1.147,16,0.222,20,0.223,26,0.011,27,0.011,65,0.82,86,0.776,87,1.249,89,0.614,117,2.115,123,1.755,146,1.249,204,1.983,225,1.933,293,2.712,300,1.891,311,2.57,318,1.886,351,2.16,352,2.977,353,2.701,471,0.892,472,1.556,474,3.255,481,4.244,502,3.957,503,3.957,504,3.957,505,3.957,508,3.482,509,3.031,510,3.482]],["title/interfaces/IUsersService.html",[219,2.2,471,0.876]],["body/interfaces/IUsersService.html",[3,0.164,4,0.164,5,0.145,7,0.262,11,0.016,15,1.147,16,0.222,20,0.223,26,0.011,27,0.011,65,0.82,86,0.776,87,1.249,89,0.614,117,2.115,123,1.755,146,1.249,187,2.868,204,1.983,219,3.045,225,1.933,293,2.712,300,1.891,311,2.57,318,1.886,351,2.16,352,2.977,353,2.701,471,0.892,472,1.556,474,3.255,481,4.244,502,3.957,503,3.957,504,3.957,505,3.957,511,3.031]],["title/interfaces/JwtPayload.html",[471,0.876,512,2.72]],["body/interfaces/JwtPayload.html",[3,0.236,4,0.236,5,0.209,7,0.377,11,0.016,15,1.15,20,0.236,26,0.014,27,0.014,86,0.979,87,2.369,89,0.469,471,1.285,472,2.242,512,4.753,513,4.869,514,4.869]],["title/injectables/JwtStrategy.html",[77,0.953,174,2.516]],["body/injectables/JwtStrategy.html",[3,0.169,4,0.169,5,0.15,7,0.27,8,2.063,11,0.016,12,0.954,14,1.533,16,0.399,17,1.001,20,0.169,21,0.042,23,1.604,24,1.403,26,0.011,27,0.011,64,2.23,65,1.137,72,2.175,76,1.852,77,1.347,78,1.681,87,1.287,89,0.451,117,1.604,119,2.262,120,1.187,121,1.527,123,1.291,150,2.159,152,2.056,157,1.604,174,3.554,187,2.175,189,3.108,219,3.758,225,2.23,232,2.175,235,4.689,240,3.124,241,4.689,248,3.484,249,2.309,382,2.641,445,3.843,512,4.646,515,3.484,516,4.03,517,4.03,518,5.424,519,4.03,520,4.03,521,4.03,522,4.03,523,3.484,524,4.689,525,4.03,526,4.03,527,4.03,528,4.03,529,4.03,530,4.03,531,4.03,532,4.03,533,4.03,534,4.03,535,4.03,536,4.03]],["title/classes/LoginDto.html",[21,0.04,110,2.516]],["body/classes/LoginDto.html",[3,0.206,4,0.206,5,0.183,7,0.33,10,1.739,11,0.016,12,1.086,15,1.136,16,0.35,20,0.206,21,0.064,26,0.013,27,0.013,84,1.572,86,0.902,87,2.157,89,0.514,110,4.048,132,1.507,156,3.445,161,3.816,163,3.007,165,2.568,166,3.266,167,4.048,168,3.266,169,3.445,170,1.959,537,4.255,538,4.922,539,4.922]],["title/classes/ParamsDto.html",[21,0.04,360,1.857]],["body/classes/ParamsDto.html",[3,0.226,4,0.226,5,0.2,7,0.36,11,0.016,12,1.148,15,1.172,20,0.226,21,0.056,26,0.013,27,0.013,84,1.719,86,0.952,89,0.543,120,1.537,121,2.056,263,3.584,360,3.157,540,4.651,541,5.381,542,5.381]],["title/classes/Plan.html",[21,0.04,496,1.959]],["body/classes/Plan.html",[3,0.138,4,0.138,5,0.123,7,0.221,10,1.791,11,0.016,12,1.119,15,1.181,16,0.341,20,0.231,21,0.034,26,0.01,27,0.01,51,1.147,65,0.691,72,2.545,84,1.053,86,0.688,89,0.623,91,3.994,92,3.477,95,3.434,96,2.167,97,1.888,98,1.888,99,2.063,101,2.159,102,1.888,120,1.315,121,1.327,132,1.009,154,3.077,165,2.518,225,1.715,263,2.81,283,3.905,284,3.902,318,1.84,319,4.169,320,4.077,321,4.077,322,3.656,323,2.664,330,2.554,337,3.09,496,3.756,543,2.334,544,3.295,545,3.295,546,3.295,547,4.716,548,3.295,549,4.077,550,3.295,551,3.656,552,3.341,553,3.295,554,3.09,555,2.848,556,2.554,557,2.848,558,2.554,559,2.334,560,2.848]],["title/classes/PlanDto.html",[21,0.04,494,2.072]],["body/classes/PlanDto.html",[3,0.172,4,0.172,5,0.152,7,0.274,10,1.938,11,0.016,12,1.211,15,1.18,16,0.35,20,0.172,21,0.057,26,0.011,27,0.011,84,1.309,86,0.801,89,0.573,120,1.353,121,1.544,132,1.255,163,2.504,165,2.694,166,3.329,168,3.194,169,3.369,170,1.631,263,3.155,267,2.504,276,3.351,277,3.778,278,3.595,283,4.059,284,4.381,287,3.543,289,3.595,291,4.052,292,3.543,313,2.904,318,1.669,494,2.961,561,3.543,562,4.099,563,4.099,564,4.099,565,4.099,566,4.099]],["title/controllers/PlansController.html",[0,1.601,567,2.72]],["body/controllers/PlansController.html",[0,1.374,2,1.374,3,0.138,4,0.138,5,0.123,7,0.221,8,1.794,10,1.327,11,0.016,12,0.829,14,1.794,16,0.395,17,0.818,20,0.138,21,0.034,23,1.312,24,1.642,26,0.01,27,0.01,64,2.408,76,1.514,89,0.551,107,2.334,112,3.341,113,3.341,114,3.341,115,3.341,116,3.365,119,1.374,120,0.721,121,0.927,123,1.431,124,2.334,125,3.341,126,3.902,127,3.902,128,3.902,129,3.902,130,2.334,131,3.902,132,1.009,138,3.365,139,3.365,140,3.365,141,3.365,142,2.334,143,2.013,144,2.334,150,1.312,152,1.681,153,2.334,154,3.483,157,1.877,204,1.444,280,3.573,323,1.594,351,2.005,355,2.554,356,3.609,357,2.554,365,2.554,374,2.554,379,4.269,380,3.656,381,2.554,382,2.159,393,3.656,394,2.554,406,2.554,492,2.159,493,2.159,494,2.545,496,3.068,497,3.09,499,2.159,557,2.848,567,3.341,568,2.848,569,2.554,570,3.295,571,3.295,572,2.554,573,2.554,574,3.295,575,3.295,576,3.295,577,3.295,578,3.295]],["title/modules/PlansModule.html",[28,1.601,42,2.516]],["body/modules/PlansModule.html",[2,2.253,3,0.168,4,0.168,5,0.149,11,0.017,16,0.428,17,0.995,20,0.168,21,0.042,26,0.011,27,0.011,28,2.549,30,2.045,31,2.296,32,2.626,33,2.626,34,2.296,35,3.096,36,2.296,41,4.3,42,4.612,45,3.541,46,2.626,47,2.626,49,3.301,50,2.626,51,1.395,57,3.465,96,1.842,120,0.877,192,2.839,200,4.331,201,4.331,383,3.096,412,3.301,495,3.541,496,2.045,499,3.541,559,3.829,567,4.331,572,3.107,573,3.107,579,4.008,580,4.008,581,4.008,582,4.008,583,3.829,584,4.008,585,3.829,586,4.008,587,3.107,588,4.008,589,3.465,590,4.008]],["title/injectables/PlansRepository.html",[77,0.953,585,2.72]],["body/injectables/PlansRepository.html",[3,0.173,4,0.173,5,0.153,7,0.276,8,2.094,11,0.016,12,1.091,14,2.094,16,0.411,17,1.023,20,0.173,21,0.043,23,1.641,24,1.917,26,0.011,27,0.011,51,1.435,64,2.581,77,1.367,78,1.719,89,0.458,99,1.803,119,2.296,120,1.205,121,1.55,123,1.576,146,1.317,149,1.894,150,2.192,157,2.192,204,1.686,205,2.92,206,5.027,210,2.92,280,3.572,351,2.207,430,3.195,490,3.608,492,2.701,493,2.701,494,2.225,496,2.81,556,3.195,569,4.269,573,3.195,585,3.901,587,3.195,591,3.563,592,4.122,593,4.122,594,4.122,595,4.122,596,4.122]],["title/injectables/PlansService.html",[77,0.953,583,2.72]],["body/injectables/PlansService.html",[3,0.143,4,0.143,5,0.127,7,0.228,8,1.839,11,0.016,12,1.074,14,1.839,16,0.39,17,0.847,20,0.143,21,0.05,23,2.566,24,1.683,26,0.01,27,0.01,64,2.436,65,0.715,76,1.568,77,1.2,78,1.423,86,0.706,89,0.402,119,2.016,120,1.058,121,1.361,123,1.454,146,1.09,149,1.568,150,1.924,152,3.29,157,2.235,170,1.358,204,1.48,215,4.327,218,2.417,222,3.425,230,2.235,231,2.235,232,3.297,234,2.417,247,3.425,249,2.77,257,3.425,258,4.002,259,3.425,280,3.297,351,2.036,383,1.955,384,3.731,392,2.949,399,2.084,412,3.43,445,2.417,450,2.645,460,2.645,462,2.645,463,2.645,465,2.645,466,2.645,490,4.002,492,2.235,493,2.235,494,1.841,495,2.235,496,1.741,497,3.168,569,3.747,572,2.645,583,3.425,587,2.645,589,2.949,597,2.949,598,4.834,599,3.412,600,3.412,601,4.834,602,3.412,603,3.412,604,3.412]],["title/classes/Routine.html",[21,0.04,605,2.976]],["body/classes/Routine.html",[3,0.152,4,0.152,5,0.135,7,0.243,10,1.856,11,0.016,12,1.201,15,1.226,16,0.329,20,0.243,21,0.038,26,0.01,27,0.01,51,1.262,65,0.76,84,1.158,86,0.736,89,0.623,90,5.112,91,4.209,92,3.788,95,3.685,96,2.319,97,2.077,98,2.077,99,2.207,101,2.376,102,2.077,120,1.269,263,2.961,283,3.912,284,4.111,318,1.566,323,2.807,551,3.911,552,3.575,554,3.306,555,3.134,558,2.811,605,4.498,606,2.569,607,5.802,608,3.626,609,3.626,610,3.626,611,3.626,612,3.626,613,3.626,614,3.134,615,3.626,616,2.811,617,3.134]],["title/controllers/RoutinesController.html",[0,1.601,618,2.72]],["body/controllers/RoutinesController.html",[0,2.83,2,2.395,3,0.241,4,0.241,5,0.214,11,0.016,16,0.326,17,1.426,20,0.241,21,0.06,26,0.014,27,0.014,618,4.809,619,4.966,620,5.744]],["title/modules/RoutinesModule.html",[28,1.601,43,2.516]],["body/modules/RoutinesModule.html",[2,2.593,3,0.208,4,0.208,5,0.185,11,0.016,16,0.384,17,1.235,20,0.208,21,0.052,26,0.013,27,0.013,28,2.829,30,2.538,31,2.85,32,3.259,33,3.259,34,2.85,35,3.886,36,2.85,43,4.889,45,4.074,46,3.259,47,3.259,49,3.038,618,4.806,621,4.299,622,4.299,623,4.889,624,4.973,625,4.973,626,4.973]],["title/injectables/RoutinesRepository.html",[77,0.953,627,2.976]],["body/injectables/RoutinesRepository.html",[3,0.244,4,0.244,5,0.216,11,0.016,16,0.329,17,1.443,20,0.244,21,0.06,26,0.014,27,0.014,77,1.697,78,2.424,627,5.298,628,5.026]],["title/injectables/RoutinesService.html",[77,0.953,623,2.516]],["body/injectables/RoutinesService.html",[3,0.244,4,0.244,5,0.216,11,0.016,16,0.329,17,1.443,20,0.244,21,0.06,26,0.014,27,0.014,77,1.697,78,2.424,623,4.479,629,5.026]],["title/classes/ShapeHistory.html",[21,0.04,630,2.516]],["body/classes/ShapeHistory.html",[3,0.149,4,0.149,5,0.132,7,0.238,10,1.751,11,0.016,12,1.094,16,0.325,20,0.241,21,0.037,26,0.01,27,0.01,51,1.237,65,0.745,72,1.918,84,1.135,86,0.726,89,0.601,91,4.072,92,3.685,95,3.534,96,2.287,97,2.036,98,2.851,99,1.555,102,2.036,132,1.088,154,3.008,165,2.49,225,2.585,319,4.075,434,2.755,630,3.762,631,4.638,632,2.518,633,4.821,634,5.075,635,4.821,636,4.821,637,4.406,638,3.554,639,3.554,640,6.451,641,4.976,642,4.976,643,4.301,644,3.554,645,3.554,646,3.554,647,3.554,648,3.554,649,3.554,650,3.073,651,3.554,652,2.518,653,3.073]],["title/classes/ShapeHistoryDto.html",[21,0.04,311,1.857]],["body/classes/ShapeHistoryDto.html",[3,0.184,4,0.184,5,0.163,7,0.294,10,1.909,11,0.016,12,1.193,16,0.325,20,0.184,21,0.06,26,0.012,27,0.012,84,1.401,86,0.837,89,0.564,132,1.343,165,2.677,166,3.404,168,3.404,170,1.745,311,2.775,314,4.447,633,4.956,634,4.956,635,4.956,636,4.956,637,4.064,640,6.241,654,6.084,655,3.79,656,4.385,657,4.385,658,6.393,659,4.385,660,4.385,661,4.385,662,6.781]],["title/classes/Training.html",[21,0.04,283,2.2]],["body/classes/Training.html",[3,0.125,4,0.125,5,0.11,7,0.199,10,1.907,11,0.016,12,1.191,15,1.23,16,0.294,20,0.218,21,0.031,26,0.009,27,0.009,51,1.034,65,0.623,72,3.091,84,0.949,86,0.638,89,0.616,90,2.302,91,4.134,92,3.528,95,3.563,96,2.01,97,1.702,98,1.702,99,1.913,102,1.702,120,1.136,121,1.612,132,0.909,154,3.193,165,2.577,265,3.498,283,3.497,301,3.752,316,3.156,318,1.782,319,4.326,323,1.437,337,2.866,551,3.39,554,1.946,558,2.302,663,2.104,664,4.95,665,4.487,666,4.487,667,4.95,668,4.95,669,4.373,670,2.97,671,2.97,672,2.97,673,2.97,674,2.97,675,2.97,676,2.97,677,2.97,678,2.97,679,2.97,680,2.97,681,2.97,682,2.97,683,2.567,684,2.97,685,2.567]],["title/classes/TrainingDto.html",[21,0.04,686,2.976]],["body/classes/TrainingDto.html",[3,0.161,4,0.161,5,0.143,7,0.257,10,2.002,11,0.016,12,1.251,15,1.213,16,0.297,20,0.161,21,0.055,26,0.011,27,0.011,84,1.226,86,0.766,89,0.592,121,1.477,132,1.175,163,3.652,165,2.754,166,3.361,168,3.44,169,3.629,170,1.528,265,3.652,278,3.438,289,3.438,291,3.917,301,3.438,313,3.717,318,1.614,664,5.168,665,5.168,666,5.168,667,5.168,668,5.168,686,4.067,687,3.317,688,3.837,689,3.837,690,3.837,691,3.837,692,3.837,693,3.837,694,3.837,695,3.837,696,3.837]],["title/classes/User.html",[21,0.04,225,1.397]],["body/classes/User.html",[3,0.117,4,0.117,5,0.103,7,0.186,10,1.871,11,0.016,12,1.169,15,1.199,16,0.314,20,0.209,21,0.029,26,0.009,27,0.009,51,0.968,65,0.583,84,0.888,86,0.608,87,1.771,89,0.622,91,4.162,92,3.737,95,3.587,96,1.914,97,1.594,98,2.387,99,1.217,101,1.822,102,1.594,120,0.911,132,0.852,154,3.215,156,2.829,165,2.585,225,2.731,296,3.272,297,3.538,298,3.538,299,3.538,300,3.015,301,3.633,318,1.603,319,4.355,322,2.156,323,1.345,330,3.229,552,1.971,630,3.633,637,4.207,643,3.601,652,2.951,697,1.971,698,4.165,699,2.781,700,2.781,701,4.165,702,2.781,703,2.781,704,2.781,705,2.781,706,4.165,707,2.781,708,2.781,709,4.165,710,2.781,711,2.781,712,2.781,713,4.317,714,2.781,715,2.156,716,2.781,717,1.971,718,2.404]],["title/classes/UserDto.html",[21,0.04,117,1.528]],["body/classes/UserDto.html",[3,0.151,4,0.151,5,0.134,7,0.241,10,2.007,11,0.016,12,1.254,15,1.177,16,0.327,20,0.151,21,0.052,26,0.01,27,0.01,84,1.15,86,0.732,87,1.846,89,0.593,117,1.998,132,1.102,156,2.949,161,2.79,163,3.531,165,2.755,166,3.503,167,3.289,168,3.448,169,3.475,170,1.432,267,2.198,276,3.066,277,3.066,289,2.358,291,3.289,296,3.787,297,4.095,298,4.095,299,4.095,300,3.025,301,3.289,302,3.111,313,3.556,314,3.891,318,1.56,630,3.787,637,3.556,713,3.111,719,3.111,720,3.599,721,3.599,722,3.599,723,3.599,724,3.599,725,3.599,726,3.599,727,3.599,728,3.599]],["title/controllers/UsersController.html",[0,1.601,729,2.72]],["body/controllers/UsersController.html",[0,0.718,2,0.718,3,0.072,4,0.072,5,0.064,7,0.115,8,1.084,10,1.58,11,0.016,12,0.987,14,2.135,15,1.134,16,0.318,17,0.427,20,0.072,21,0.018,23,0.685,24,1.954,26,0.006,27,0.006,64,2.602,65,0.598,76,0.791,87,1.166,89,0.579,107,1.219,112,3.977,113,3.977,114,3.006,115,3.006,116,4.038,117,2.136,119,2.237,120,1.174,121,1.51,123,1.594,124,2.585,125,2.02,126,4.125,127,3.331,128,4.125,129,4.125,130,1.219,131,4.125,132,0.527,138,3.557,139,3.557,140,3.557,141,2.873,142,1.219,143,1.052,144,1.219,146,0.55,149,0.791,150,0.685,152,0.878,153,1.219,154,3.626,157,2.234,187,0.929,204,0.873,219,1.633,225,2.37,232,1.539,240,1.334,249,1.633,293,2.586,300,2.052,311,2.052,318,1.662,323,1.765,351,1.415,352,1.31,353,1.522,355,1.334,356,2.391,357,1.334,365,1.334,367,1.052,368,1.488,370,1.052,371,1.488,372,3.668,374,1.334,375,1.488,376,1.219,377,1.488,378,1.488,379,4.513,380,2.21,381,1.334,382,1.128,393,4.351,394,1.334,401,1.868,402,1.488,403,1.488,404,1.488,405,1.219,406,1.334,408,1.488,409,1.488,410,1.488,500,2.02,502,1.742,503,1.742,504,1.742,505,2.229,506,1.219,552,1.219,729,2.02,730,1.488,731,1.334,732,1.721,733,1.334,734,1.721,735,1.721,736,1.334,737,1.721,738,1.721,739,1.721,740,1.334,741,1.721,742,1.721,743,1.721,744,1.721,745,1.334,746,2.851,747,1.721,748,1.721,749,1.334,750,1.721,751,1.721,752,1.721,753,1.721,754,1.721,755,1.721,756,1.721,757,1.488,758,1.721,759,1.721,760,1.721,761,1.721,762,1.721,763,1.721,764,1.721,765,1.721]],["title/modules/UsersModule.html",[28,1.601,44,2.346]],["body/modules/UsersModule.html",[2,2.445,3,0.19,4,0.19,5,0.169,11,0.017,16,0.426,17,1.126,20,0.19,21,0.047,26,0.012,27,0.012,28,2.445,30,2.315,35,2.599,36,2.599,44,3.583,49,2.771,50,2.972,51,1.579,96,2.085,120,0.992,187,3.508,189,3.36,192,3.214,200,4.155,201,4.155,225,1.65,506,3.214,510,4.258,717,4.155,729,4.604,749,3.516,766,4.536,767,4.536,768,4.536,769,3.516,770,4.155,771,4.536,772,4.536]],["title/injectables/UsersRepository.html",[77,0.953,770,2.72]],["body/injectables/UsersRepository.html",[3,0.102,4,0.102,5,0.09,7,0.162,8,1.428,11,0.016,12,1.174,14,2.486,15,1.193,16,0.335,17,0.602,20,0.102,21,0.025,23,0.966,24,1.799,26,0.008,27,0.008,51,0.845,64,2.768,65,0.509,72,1.31,77,0.932,78,1.012,87,1.467,89,0.544,92,1.238,99,1.061,117,2.057,119,2.726,120,1.43,121,1.84,123,1.74,146,0.775,149,1.115,150,1.494,157,2.602,204,1.149,205,1.719,206,4.188,210,1.719,225,2.15,293,2.637,296,2.46,300,2.5,311,2.5,318,1.835,351,1.723,352,1.725,353,1.566,367,2.294,370,2.294,430,1.881,431,2.097,433,4.468,434,4.333,458,1.881,467,3.559,481,2.46,502,2.294,503,2.294,504,2.294,505,2.294,506,1.719,508,2.46,633,1.881,634,1.881,635,1.881,636,1.881,715,1.881,731,2.91,733,2.91,736,2.91,740,2.91,745,2.91,769,1.881,770,2.66,773,2.097,774,2.426,775,2.426,776,3.245,777,2.426,778,2.426,779,2.426,780,2.426,781,2.426,782,2.426,783,2.426,784,2.426,785,2.426,786,2.426,787,2.426,788,2.426,789,2.426,790,2.097,791,2.097,792,2.097,793,2.426]],["title/injectables/UsersService.html",[77,0.953,189,2.2]],["body/injectables/UsersService.html",[3,0.062,4,0.062,5,0.055,7,0.098,8,0.949,11,0.017,12,1.074,14,2.218,15,1.129,16,0.282,17,0.365,20,0.062,21,0.026,23,1.527,24,2.081,26,0.005,27,0.005,64,2.612,65,1.365,72,0.793,76,0.675,77,0.62,78,0.613,86,0.364,87,1.373,89,0.485,92,1.274,95,1.757,117,1.527,119,2.431,120,1.275,121,1.641,123,1.602,146,0.469,149,0.675,150,0.994,152,1.958,156,0.75,157,2.624,167,0.963,170,0.585,189,1.43,204,0.764,215,2.719,218,1.041,219,1.43,222,1.768,225,2.491,230,0.963,231,0.963,232,3.558,234,2.306,244,1.139,247,3.717,249,3.568,253,1.139,257,3.717,258,3.71,259,3.875,293,1.958,300,1.856,311,2.261,318,1.833,323,2.411,351,1.279,352,1.147,353,1.041,367,1.525,370,1.525,376,1.041,399,1.525,401,2.132,405,1.041,445,1.041,450,1.139,456,2.158,457,2.813,458,1.935,460,1.139,462,1.935,463,1.139,465,1.139,466,1.139,467,3.332,468,1.27,469,1.27,470,3.317,481,1.636,502,1.525,503,1.525,504,1.525,505,1.525,508,2.514,510,0.963,731,1.935,733,1.935,736,1.935,740,1.935,745,1.935,749,1.139,757,1.27,769,1.139,776,2.158,790,1.27,791,1.27,792,1.27,794,1.27,795,2.496,796,2.496,797,2.496,798,1.469,799,1.469,800,1.469,801,1.469,802,1.469,803,1.469,804,1.469,805,2.496,806,1.469,807,2.496,808,1.469,809,2.496,810,1.469,811,1.469,812,2.496,813,1.469,814,1.27,815,1.139,816,1.469,817,1.469,818,2.496,819,2.496,820,1.469,821,1.469,822,1.469,823,1.469,824,1.469,825,2.496,826,1.469,827,1.469,828,1.469,829,1.469,830,1.469,831,1.469,832,1.469,833,1.469,834,1.469,835,1.469,836,2.496,837,1.469,838,1.469,839,1.469,840,1.469,841,1.469,842,1.469,843,1.469,844,1.469,845,1.469,846,1.469,847,1.469,848,2.496,849,1.469,850,1.469,851,1.469,852,1.469,853,1.469,854,1.469,855,1.469,856,1.469,857,1.469,858,3.254,859,1.469,860,1.469,861,1.469,862,1.469,863,1.469,864,1.469,865,1.469,866,1.469,867,1.469]],["title/coverage.html",[868,4.068]],["body/coverage.html",[0,2.239,1,1.377,5,0.072,6,1.68,11,0.016,18,1.187,21,0.073,26,0.006,27,0.006,34,1.113,77,1.618,79,1.68,83,1.113,85,2.231,89,0.162,103,1.377,105,1.377,106,1.68,110,1.273,116,1.187,117,0.774,133,1.273,134,1.273,136,1.377,138,1.187,139,1.187,140,1.187,141,1.187,143,3.454,159,1.377,160,1.68,174,1.273,180,1.377,182,1.377,184,1.273,187,1.049,189,1.113,203,1.68,211,1.273,214,1.68,219,1.113,225,0.707,232,1.049,236,1.506,260,0.992,261,1.68,262,1.68,280,1.049,281,1.68,282,1.68,283,1.113,293,0.992,294,1.68,295,1.68,311,0.94,316,0.85,317,2.231,338,1.377,340,0.94,341,1.68,348,1.377,349,1.68,356,1.273,360,0.94,383,1.113,384,1.187,386,1.377,399,4.867,412,1.187,415,1.273,417,1.377,420,1.68,427,1.273,435,1.68,443,1.506,446,1.506,471,1.512,473,2.441,474,0.81,475,1.506,476,2.441,477,2.441,479,1.506,480,1.68,485,2.441,487,1.506,488,2.441,489,2.441,490,1.273,491,2.441,494,1.049,495,1.273,496,0.992,497,1.273,498,2.441,499,1.273,500,1.377,501,2.441,507,1.506,508,1.273,509,2.441,510,1.273,511,2.441,512,1.377,513,1.68,514,1.68,515,1.68,537,1.68,540,1.68,543,2.231,554,1.273,559,1.377,561,1.68,567,1.377,568,1.68,583,1.377,585,1.377,591,1.68,597,1.68,605,1.506,606,2.231,616,1.506,618,1.377,619,1.68,623,1.273,627,1.506,628,1.68,629,1.68,630,1.273,631,2.231,632,2.231,652,1.377,654,1.68,655,1.68,663,2.231,686,1.506,687,1.68,697,2.231,717,1.377,719,1.68,729,1.377,730,1.68,770,1.377,773,1.68,794,1.68,815,1.506,868,1.506,869,1.943,870,1.943,871,1.943,872,5.369,873,1.68,874,7.565,875,6.084,876,7.477,877,6.084,878,3.149,879,1.68,880,4.564,881,4.564,882,1.68,883,4.564,884,1.68,885,1.68,886,4.564,887,1.68,888,1.68,889,4.887,890,4.887,891,1.68,892,3.149,893,1.943,894,1.943,895,1.68,896,1.943,897,1.943]],["title/dependencies.html",[31,2.647,898,2.768]],["body/dependencies.html",[11,0.016,17,1.214,21,0.051,26,0.013,27,0.013,31,2.801,51,1.702,54,3.79,99,2.139,132,1.497,170,1.946,176,4.226,178,3.79,382,3.204,523,5.818,524,4.226,814,4.226,899,6.73,900,4.889,901,4.889,902,4.889,903,4.889,904,4.889,905,4.889,906,4.889,907,4.889,908,4.889,909,4.889,910,4.889,911,4.889,912,4.889,913,4.889,914,4.889,915,4.889,916,4.889,917,4.889,918,4.889,919,4.889,920,4.889,921,4.889,922,4.889,923,4.889,924,4.889]],["title/miscellaneous/functions.html",[925,1.956,926,3.994]],["body/miscellaneous/functions.html",[7,0.402,11,0.014,26,0.014,27,0.014,34,4.216,873,5.193,925,3.67,926,5.193,927,6.007]],["title/index.html",[7,0.214,928,3.202,929,3.202]],["body/index.html",[11,0.016,26,0.011,27,0.011,87,1.213,99,1.661,868,2.943,930,3.797,931,3.797,932,5.209,933,5.946,934,5.209,935,5.209,936,3.797,937,3.797,938,3.797,939,3.797,940,7.223,941,3.797,942,3.797,943,3.797,944,3.797,945,3.797,946,3.797,947,3.797,948,3.797,949,3.797,950,3.797,951,3.797,952,3.797,953,3.797,954,3.797,955,5.946,956,5.209,957,3.797,958,5.209,959,5.209,960,5.209,961,3.797,962,3.797,963,5.946,964,5.946,965,5.209,966,5.209,967,5.209,968,3.797,969,5.209,970,5.946,971,5.209,972,5.209,973,3.797,974,3.797,975,3.797,976,3.797,977,3.797,978,3.797,979,3.797,980,3.797,981,3.797,982,3.797,983,3.797,984,3.797,985,3.797,986,3.797,987,3.797,988,3.797,989,3.797,990,3.797,991,7.092,992,3.797,993,3.797,994,3.797,995,3.797,996,6.925,997,3.797,998,3.797,999,5.209,1000,3.797,1001,3.797,1002,3.797,1003,3.797,1004,5.209,1005,5.209,1006,3.797,1007,3.797,1008,3.797,1009,3.797,1010,3.282,1011,3.797,1012,3.797,1013,3.797,1014,3.797,1015,3.797,1016,3.797,1017,3.797,1018,3.797]],["title/modules.html",[30,2.678]],["body/modules.html",[11,0.014,26,0.014,27,0.014,29,3.914,30,2.819,40,3.62,41,3.375,42,3.62,43,3.62,44,3.375,1019,7.369,1020,7.369,1021,7.369,1022,7.653,1023,6.631,1024,6.631]],["title/overview.html",[1025,4.537]],["body/overview.html",[2,1.886,11,0.016,18,3.964,26,0.012,27,0.012,28,1.886,29,5.545,30,2.307,31,2.591,32,2.963,33,2.963,34,2.591,35,2.591,36,2.591,37,3.909,38,3.909,39,3.909,40,4.855,41,4.192,42,4.657,43,4.657,44,4.192,45,3.835,46,2.963,47,2.963,78,1.886,84,1.445,171,3.909,173,3.909,174,4.252,472,1.8,621,3.909,622,3.909,623,4.252,1025,3.909,1026,5.852,1027,4.522,1028,4.522,1029,4.522]],["title/properties.html",[86,0.674,898,2.768]],["body/properties.html",[11,0.016,26,0.014,27,0.014,86,0.866,154,2.87,1010,5.129,1030,5.933,1031,5.933,1032,5.933,1033,5.933]],["title/miscellaneous/typealiases.html",[925,1.956,1034,4.62]],["body/miscellaneous/typealiases.html",[7,0.363,11,0.013,26,0.013,27,0.013,85,3.841,89,0.451,100,5.082,317,3.841,336,5.082,543,3.841,556,5.082,606,3.841,614,5.667,631,3.841,632,4.645,650,5.667,663,3.841,683,5.667,697,3.841,715,5.082,925,3.312,1035,5.421,1036,4.686,1037,4.686,1038,4.686,1039,4.686,1040,4.686,1041,4.686,1042,4.686]],["title/miscellaneous/variables.html",[925,1.956,1043,3.994]],["body/miscellaneous/variables.html",[7,0.149,11,0.016,15,1.177,24,1.715,26,0.007,27,0.007,64,0.808,65,0.466,85,1.574,87,0.71,89,0.603,103,2.482,104,1.92,116,2.141,117,0.884,120,0.766,123,0.529,133,2.843,138,2.141,139,2.141,140,2.141,141,2.141,143,3.776,156,1.133,157,0.884,184,2.843,187,2.342,225,1.275,230,4.98,231,4.98,236,2.716,243,1.92,244,1.722,253,1.722,258,1.455,263,1.788,264,1.574,265,1.357,266,1.574,296,1.455,297,1.574,298,1.574,299,1.574,300,1.074,316,1.533,317,1.574,318,0.946,338,2.482,339,1.92,340,1.074,356,2.296,360,1.074,363,2.486,383,2.486,399,1.357,401,1.455,415,2.843,419,1.92,443,2.716,446,2.716,473,1.722,475,3.363,476,1.722,477,1.722,485,1.722,487,3.363,488,1.722,489,1.722,491,1.722,495,2.843,498,1.722,499,2.843,501,1.722,507,3.363,509,1.722,510,2.843,511,1.722,543,1.574,549,1.92,554,2.296,559,2.482,560,1.92,606,1.574,616,2.716,617,1.92,631,1.574,632,2.482,652,2.482,653,1.92,663,1.574,685,1.92,697,1.574,717,2.482,718,1.92,815,2.716,879,1.92,882,1.92,884,1.92,885,3.751,887,1.92,888,3.029,889,1.92,890,5.343,891,3.029,895,1.92,925,1.357,1036,1.92,1037,1.92,1038,1.92,1039,1.92,1040,1.92,1041,1.92,1042,1.92,1043,1.92,1044,2.221,1045,2.221,1046,2.221,1047,5.963,1048,2.221,1049,2.221,1050,2.221,1051,2.221,1052,2.221,1053,2.221,1054,2.221,1055,2.221,1056,2.221,1057,2.221,1058,2.221,1059,2.221,1060,2.221,1061,2.221,1062,2.221,1063,2.221,1064,2.221,1065,2.221,1066,2.221,1067,2.221,1068,3.504,1069,3.504,1070,3.504,1071,2.221,1072,2.221,1073,2.221,1074,2.221,1075,2.221,1076,2.221,1077,3.504,1078,2.221,1079,2.221,1080,2.221,1081,2.221,1082,2.221,1083,2.221,1084,2.221,1085,2.221,1086,2.221,1087,2.221,1088,2.221]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":399,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1031,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":823,"title":{},"body":{"injectables/UsersService.html":{}}}],["10.0.3",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1027,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1029,"title":{},"body":{"overview.html":{}}}],["16.1.0",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1028,"title":{},"body":{"overview.html":{}}}],["2.3.2",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1026,"title":{},"body":{"overview.html":{}}}],["6.3.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["9.0.0",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":434,"title":{},"body":{"injectables/ExercisesRepository.html":{},"classes/ShapeHistory.html":{},"injectables/UsersRepository.html":{}}}],["academia",{"_index":948,"title":{},"body":{"index.html":{}}}],["according",{"_index":641,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["acesse",{"_index":965,"title":{},"body":{"index.html":{}}}],["activation",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["active",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersRepository.html":{},"miscellaneous/variables.html":{}}}],["age",{"_index":633,"title":{},"body":{"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"injectables/UsersRepository.html":{}}}],["age'})@prop({type",{"_index":638,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["aliases",{"_index":1035,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":829,"title":{},"body":{"injectables/UsersService.html":{}}}],["além",{"_index":949,"title":{},"body":{"index.html":{}}}],["api",{"_index":971,"title":{},"body":{"index.html":{}}}],["api.onrender.com/swagger",{"_index":974,"title":{},"body":{"index.html":{}}}],["api/back",{"_index":931,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth",{"_index":379,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":380,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["apiinternalservererrorresponse",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["apinotfoundresponse",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":165,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"classes/LoginDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["apiproperty()@isarray()@isoptional",{"_index":287,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/PlanDto.html":{}}}],["apiproperty()@isdate()@isdefined()@isnotempty",{"_index":656,"title":{},"body":{"classes/ShapeHistoryDto.html":{}}}],["apiproperty()@isdate()@isnotempty()@isdefined",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isdefined()@isarray()@arraynotempty",{"_index":267,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/ExerciseDto.html":{},"classes/PlanDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@isdefined()@isnotempty()@isboolean",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@isdefined()@isnotempty()@isdate",{"_index":721,"title":{},"body":{"classes/UserDto.html":{}}}],["apiproperty()@isdefined()@isnotempty()@ismongoid()@isstring",{"_index":289,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/ExerciseDto.html":{},"classes/PlanDto.html":{},"classes/TrainingDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@isdefined()@isnotempty()@isstring",{"_index":163,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreatePlanDto.html":{},"classes/LoginDto.html":{},"classes/PlanDto.html":{},"classes/TrainingDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@isdefined()@isnotempty()@isstring()@isemail",{"_index":161,"title":{},"body":{"classes/AuthDto.html":{},"classes/LoginDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@isemail()@isstring()@isnotempty()@isdefined",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@isboolean",{"_index":688,"title":{},"body":{"classes/TrainingDto.html":{}}}],["apiproperty()@isnumber()@isdefined()@isnotempty",{"_index":658,"title":{},"body":{"classes/ShapeHistoryDto.html":{}}}],["apiproperty()@isoptional()@isstring",{"_index":693,"title":{},"body":{"classes/TrainingDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@isdefined",{"_index":271,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/CreateUserDto.html":{},"classes/ExerciseDto.html":{}}}],["apiproperty()@isstring()@isoptional",{"_index":273,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/ExerciseDto.html":{}}}],["apiproperty()@isstring()@isurl()@isoptional",{"_index":269,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/ExerciseDto.html":{}}}],["apiproperty({description",{"_index":319,"title":{},"body":{"classes/Exercise.html":{},"classes/Plan.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{}}}],["apitags",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('exercises",{"_index":391,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["apitags('plans",{"_index":576,"title":{},"body":{"controllers/PlansController.html":{}}}],["apitags('users",{"_index":752,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["aplicação",{"_index":934,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arr",{"_index":809,"title":{},"body":{"injectables/UsersService.html":{}}}],["arr.foreach((obj",{"_index":834,"title":{},"body":{"injectables/UsersService.html":{}}}],["arraynotempty",{"_index":276,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/ExerciseDto.html":{},"classes/PlanDto.html":{},"classes/UserDto.html":{}}}],["async",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["atlasconnection",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["atlasconnection}/${process.env.mongo_db",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["auth",{"_index":83,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"interfaces/IAuthRepository.html":{},"coverage.html":{}}}],["auth.controller",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.model",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"interfaces/IAuthRepository.html":{}}}],["auth.name",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.repository",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_controller",{"_index":475,"title":{},"body":{"interfaces/IAuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_repository",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IAuthRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_service",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/IAuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":105,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdocument",{"_index":100,"title":{},"body":{"classes/Auth.html":{},"injectables/AuthRepository.html":{},"miscellaneous/typealiases.html":{}}}],["authdto",{"_index":159,"title":{"classes/AuthDto.html":{}},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authguard",{"_index":381,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1010,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authrepository",{"_index":182,"title":{"injectables/AuthRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"coverage.html":{}}}],["authschema",{"_index":103,"title":{},"body":{"classes/Auth.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":180,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["available",{"_index":1024,"title":{},"body":{"modules.html":{}}}],["await",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":978,"title":{},"body":{"index.html":{}}}],["bad",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bad_request_400",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bad_request_400})@apinotfoundresponse({description",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["badrequestexception",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`delete",{"_index":861,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`disable",{"_index":867,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`enable",{"_index":864,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`invalid",{"_index":456,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`update",{"_index":469,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(error",{"_index":857,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(error.message",{"_index":466,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(errors",{"_index":463,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["banco",{"_index":963,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":813,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.compare(passwordlogin",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.hash(password",{"_index":822,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":814,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["birth",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["birthdate",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":634,"title":{},"body":{"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"injectables/UsersRepository.html":{}}}],["body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1022,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1019,"title":{},"body":{"modules.html":{}}}],["buildparams",{"_index":446,"title":{},"body":{"injectables/ExercisesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buildparams(params",{"_index":451,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["calculation",{"_index":651,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["calculation'})@prop({type",{"_index":644,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["catch",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["catch((error",{"_index":856,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":21,"title":{"classes/Auth.html":{},"classes/AuthDto.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":84,"title":{},"body":{"classes/Auth.html":{},"classes/AuthDto.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_plansmodule",{"_index":579,"title":{},"body":{"modules/PlansModule.html":{}}}],["cluster_plansmodule_imports",{"_index":580,"title":{},"body":{"modules/PlansModule.html":{}}}],["cluster_routinesmodule",{"_index":621,"title":{},"body":{"modules/RoutinesModule.html":{},"overview.html":{}}}],["cluster_routinesmodule_providers",{"_index":622,"title":{},"body":{"modules/RoutinesModule.html":{},"overview.html":{}}}],["collection",{"_index":101,"title":{},"body":{"classes/Auth.html":{},"classes/Exercise.html":{},"classes/Plan.html":{},"classes/Routine.html":{},"classes/User.html":{}}}],["com",{"_index":955,"title":{},"body":{"index.html":{}}}],["comparepasswords",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(password",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["compodoc",{"_index":986,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configservice.get('jwt_secret",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('mongo_atlas",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongo_local",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Exercise.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"injectables/JwtStrategy.html":{},"classes/Plan.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["constructor(model",{"_index":205,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ExercisesRepository.html":{},"injectables/PlansRepository.html":{},"injectables/UsersRepository.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(repository",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":516,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["content",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":669,"title":{},"body":{"classes/Training.html":{}}}],["controle",{"_index":939,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/RoutinesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/RoutinesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('exercises",{"_index":390,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["controller('plans",{"_index":575,"title":{},"body":{"controllers/PlansController.html":{}}}],["controller('users",{"_index":751,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":868,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":204,"title":{},"body":{"injectables/AuthRepository.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":406,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["create(auth",{"_index":208,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["create(exercise",{"_index":354,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{}}}],["create(plan",{"_index":569,"title":{},"body":{"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{}}}],["create(user",{"_index":731,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":549,"title":{},"body":{"classes/Plan.html":{},"miscellaneous/variables.html":{}}}],["created_201",{"_index":356,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createexercisedto",{"_index":260,"title":{"classes/CreateExerciseDto.html":{}},"body":{"classes/CreateExerciseDto.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"coverage.html":{}}}],["createplandto",{"_index":280,"title":{"classes/CreatePlanDto.html":{}},"body":{"classes/CreatePlanDto.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":293,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["da",{"_index":933,"title":{},"body":{"index.html":{}}}],["dados",{"_index":964,"title":{},"body":{"index.html":{}}}],["data",{"_index":643,"title":{},"body":{"classes/ShapeHistory.html":{},"classes/User.html":{}}}],["date",{"_index":637,"title":{},"body":{"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["date'})@prop({type",{"_index":702,"title":{},"body":{"classes/User.html":{}}}],["date(shape.age",{"_index":844,"title":{},"body":{"injectables/UsersService.html":{}}}],["de",{"_index":940,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"classes/LoginDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":481,"title":{},"body":{"interfaces/IDefaultController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["delete(id",{"_index":776,"title":{},"body":{"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["demonstração",{"_index":950,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"classes/Exercise.html":{},"controllers/ExercisesController.html":{},"classes/Plan.html":{},"controllers/PlansController.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"properties.html":{}}}],["descrição",{"_index":930,"title":{},"body":{"index.html":{}}}],["desenho",{"_index":988,"title":{},"body":{"index.html":{}}}],["desenvolvida",{"_index":954,"title":{},"body":{"index.html":{}}}],["development",{"_index":995,"title":{},"body":{"index.html":{}}}],["diagramação",{"_index":987,"title":{},"body":{"index.html":{}}}],["disable",{"_index":502,"title":{},"body":{"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["disable(@param('id",{"_index":764,"title":{},"body":{"controllers/UsersController.html":{}}}],["disable(id",{"_index":733,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["disabled",{"_index":866,"title":{},"body":{"injectables/UsersService.html":{}}}],["doc",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IAuthController.html":{},"interfaces/IDefaultController.html":{}}}],["document",{"_index":98,"title":{},"body":{"classes/Auth.html":{},"classes/Exercise.html":{},"classes/Plan.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{}}}],["documentation",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":970,"title":{},"body":{"index.html":{}}}],["done",{"_index":664,"title":{},"body":{"classes/Training.html":{},"classes/TrainingDto.html":{}}}],["done'})@prop({type",{"_index":670,"title":{},"body":{"classes/Training.html":{}}}],["dotenv",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{}}}],["draw",{"_index":966,"title":{},"body":{"index.html":{}}}],["dtos/create",{"_index":492,"title":{},"body":{"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{}}}],["dtos/dtos",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["dtos/plan.dto",{"_index":574,"title":{},"body":{"controllers/PlansController.html":{}}}],["e",{"_index":945,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":1006,"title":{},"body":{"index.html":{}}}],["em",{"_index":957,"title":{},"body":{"index.html":{}}}],["email",{"_index":87,"title":{},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IAuthService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["email'})@prop({type",{"_index":704,"title":{},"body":{"classes/User.html":{}}}],["enable",{"_index":503,"title":{},"body":{"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["enable(@param('id",{"_index":761,"title":{},"body":{"controllers/UsersController.html":{}}}],["enable(id",{"_index":736,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["enabled",{"_index":863,"title":{},"body":{"injectables/UsersService.html":{}}}],["end",{"_index":932,"title":{},"body":{"index.html":{}}}],["error",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["error.constraints",{"_index":852,"title":{},"body":{"injectables/UsersService.html":{}}}],["errors",{"_index":460,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["errors.length",{"_index":462,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["errors.map((error",{"_index":851,"title":{},"body":{"injectables/UsersService.html":{}}}],["estática",{"_index":985,"title":{},"body":{"index.html":{}}}],["evolução",{"_index":943,"title":{},"body":{"index.html":{}}}],["executar",{"_index":993,"title":{},"body":{"index.html":{}}}],["execução",{"_index":951,"title":{},"body":{"index.html":{}}}],["exercise",{"_index":316,"title":{"classes/Exercise.html":{}},"body":{"classes/Exercise.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"classes/Training.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exercise'})@prop({type",{"_index":332,"title":{},"body":{"classes/Exercise.html":{}}}],["exercise.focusmuscle",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercise.id",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercise.image",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercise.length",{"_index":398,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["exercise.model",{"_index":388,"title":{},"body":{"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"interfaces/IExercisesController.html":{}}}],["exercise.name",{"_index":419,"title":{},"body":{"modules/ExercisesModule.html":{},"miscellaneous/variables.html":{}}}],["exercise.notes",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercise.video",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercisedocument",{"_index":336,"title":{},"body":{"classes/Exercise.html":{},"injectables/ExercisesRepository.html":{},"miscellaneous/typealiases.html":{}}}],["exercisedto",{"_index":340,"title":{"classes/ExerciseDto.html":{}},"body":{"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exerciseid",{"_index":665,"title":{},"body":{"classes/Training.html":{},"classes/TrainingDto.html":{}}}],["exercises",{"_index":337,"title":{},"body":{"classes/Exercise.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"classes/Plan.html":{},"classes/Training.html":{}}}],["exercises.controller",{"_index":414,"title":{},"body":{"modules/ExercisesModule.html":{}}}],["exercises.dto.ts",{"_index":262,"title":{},"body":{"classes/CreateExerciseDto.html":{},"coverage.html":{}}}],["exercises.dto.ts:17",{"_index":272,"title":{},"body":{"classes/CreateExerciseDto.html":{}}}],["exercises.dto.ts:23",{"_index":268,"title":{},"body":{"classes/CreateExerciseDto.html":{}}}],["exercises.dto.ts:29",{"_index":270,"title":{},"body":{"classes/CreateExerciseDto.html":{}}}],["exercises.dto.ts:35",{"_index":275,"title":{},"body":{"classes/CreateExerciseDto.html":{}}}],["exercises.dto.ts:40",{"_index":274,"title":{},"body":{"classes/CreateExerciseDto.html":{}}}],["exercises.length",{"_index":453,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["exercises.map((exe",{"_index":454,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["exercises.repository",{"_index":418,"title":{},"body":{"modules/ExercisesModule.html":{}}}],["exercises.service",{"_index":413,"title":{},"body":{"modules/ExercisesModule.html":{}}}],["exercises/exercises.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/PlansModule.html":{}}}],["exercises/exercises.service",{"_index":588,"title":{},"body":{"modules/PlansModule.html":{}}}],["exercises/interfaces/exercises.service.interface",{"_index":589,"title":{},"body":{"modules/PlansModule.html":{},"injectables/PlansService.html":{}}}],["exercises_controller",{"_index":487,"title":{},"body":{"interfaces/IExercisesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exercises_repository",{"_index":415,"title":{},"body":{"modules/ExercisesModule.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exercises_service",{"_index":383,"title":{},"body":{"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"interfaces/IExercisesService.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exerciseschema",{"_index":338,"title":{},"body":{"classes/Exercise.html":{},"modules/ExercisesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exercisescontroller",{"_index":348,"title":{"controllers/ExercisesController.html":{}},"body":{"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"coverage.html":{}}}],["exercisesmodule",{"_index":41,"title":{"modules/ExercisesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules.html":{},"overview.html":{}}}],["exercisesrepository",{"_index":417,"title":{"injectables/ExercisesRepository.html":{}},"body":{"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"coverage.html":{}}}],["exercisesservice",{"_index":412,"title":{"injectables/ExercisesService.html":{}},"body":{"modules/ExercisesModule.html":{},"injectables/ExercisesService.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"coverage.html":{}}}],["exercícios",{"_index":952,"title":{},"body":{"index.html":{}}}],["existing",{"_index":547,"title":{},"body":{"classes/Plan.html":{}}}],["existis",{"_index":825,"title":{},"body":{"injectables/UsersService.html":{}}}],["exists",{"_index":830,"title":{},"body":{"injectables/UsersService.html":{}}}],["expiresin",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":529,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["external",{"_index":326,"title":{},"body":{"classes/Exercise.html":{}}}],["extractjwt",{"_index":521,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":535,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":470,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/UsersService.html":{}}}],["false",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"classes/Exercise.html":{},"injectables/JwtStrategy.html":{},"classes/Plan.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["field",{"_index":484,"title":{},"body":{"interfaces/IDefaultController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findbyparams",{"_index":350,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{}}}],["findbyparams(@query",{"_index":396,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["findbyparams(params",{"_index":359,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{}}}],["first",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["firstname",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["flavsoliver@gmail.com",{"_index":1018,"title":{},"body":{"index.html":{}}}],["fluxos",{"_index":989,"title":{},"body":{"index.html":{}}}],["flávio",{"_index":1011,"title":{},"body":{"index.html":{}}}],["focus",{"_index":320,"title":{},"body":{"classes/Exercise.html":{},"classes/Plan.html":{}}}],["focusmuscle",{"_index":263,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"classes/Routine.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":401,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":960,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":607,"title":{},"body":{"classes/Routine.html":{}}}],["funcionalidades",{"_index":968,"title":{},"body":{"index.html":{}}}],["function",{"_index":474,"title":{},"body":{"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"coverage.html":{}}}],["functions",{"_index":926,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["física",{"_index":944,"title":{},"body":{"index.html":{}}}],["físicos",{"_index":953,"title":{},"body":{"index.html":{}}}],["generatetoken",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["generatetoken(user",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':id",{"_index":402,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@useguards(undefined)@apibearerauth()@apiunauthorizedresponse({description",{"_index":368,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["get('email",{"_index":754,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('email')@useguards(undefined)@apibearerauth()@apiunauthorizedresponse({description",{"_index":741,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('search",{"_index":395,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["get('search')@useguards(undefined)@apibearerauth()@apiunauthorizedresponse({description",{"_index":361,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["get()@useguards(undefined)@apibearerauth()@apiunauthorizedresponse({description",{"_index":365,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["getall",{"_index":351,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["getbyemail",{"_index":504,"title":{},"body":{"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["getbyemail(@query('email",{"_index":755,"title":{},"body":{"controllers/UsersController.html":{}}}],["getbyemail(email",{"_index":740,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["getbyfield",{"_index":482,"title":{},"body":{"interfaces/IDefaultController.html":{}}}],["getbyid",{"_index":352,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["getbyid(@param('id",{"_index":403,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["getbyid(id",{"_index":367,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":928,"title":{"index.html":{}},"body":{}}],["graph",{"_index":1023,"title":{},"body":{"modules.html":{}}}],["gym",{"_index":935,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":795,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashedpassword(password",{"_index":805,"title":{},"body":{"injectables/UsersService.html":{}}}],["height",{"_index":635,"title":{},"body":{"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"injectables/UsersRepository.html":{}}}],["height'})@prop({type",{"_index":646,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["hello",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["history",{"_index":713,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["history.dto",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["history.dto.ts",{"_index":655,"title":{},"body":{"classes/ShapeHistoryDto.html":{},"coverage.html":{}}}],["history.dto.ts:15",{"_index":660,"title":{},"body":{"classes/ShapeHistoryDto.html":{}}}],["history.dto.ts:21",{"_index":661,"title":{},"body":{"classes/ShapeHistoryDto.html":{}}}],["history.dto.ts:27",{"_index":659,"title":{},"body":{"classes/ShapeHistoryDto.html":{}}}],["history.dto.ts:9",{"_index":657,"title":{},"body":{"classes/ShapeHistoryDto.html":{}}}],["history.ts",{"_index":632,"title":{},"body":{"classes/ShapeHistory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["history.ts:11",{"_index":639,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["history.ts:15",{"_index":647,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["history.ts:19",{"_index":649,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["history.ts:25",{"_index":645,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["https://docs.nestjs.com/controllers#controllers",{"_index":620,"title":{},"body":{"controllers/RoutinesController.html":{}}}],["https://flaviosoliver",{"_index":1014,"title":{},"body":{"index.html":{}}}],["https://todo",{"_index":973,"title":{},"body":{"index.html":{}}}],["https://www.linkedin.com/in/flaviosoliver",{"_index":1017,"title":{},"body":{"index.html":{}}}],["iauthcontroller",{"_index":136,"title":{"interfaces/IAuthController.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/IAuthController.html":{},"coverage.html":{}}}],["iauthrepository",{"_index":211,"title":{"interfaces/IAuthRepository.html":{}},"body":{"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"interfaces/IAuthRepository.html":{},"coverage.html":{}}}],["iauthservice",{"_index":134,"title":{"interfaces/IAuthService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IAuthService.html":{},"coverage.html":{}}}],["id",{"_index":318,"title":{},"body":{"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"classes/Routine.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["idefaultcontroller",{"_index":479,"title":{"interfaces/IDefaultController.html":{}},"body":{"interfaces/IDefaultController.html":{},"coverage.html":{}}}],["identifier",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["iexercisescontroller",{"_index":386,"title":{"interfaces/IExercisesController.html":{}},"body":{"controllers/ExercisesController.html":{},"interfaces/IExercisesController.html":{},"coverage.html":{}}}],["iexercisesrepository",{"_index":427,"title":{"interfaces/IExercisesRepository.html":{}},"body":{"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesRepository.html":{},"coverage.html":{}}}],["iexercisesservice",{"_index":384,"title":{"interfaces/IExercisesService.html":{}},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesService.html":{},"injectables/PlansService.html":{},"coverage.html":{}}}],["ignoreexpiration",{"_index":536,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":264,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"miscellaneous/variables.html":{}}}],["image'})@prop({type",{"_index":328,"title":{},"body":{"classes/Exercise.html":{}}}],["implements",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"modules/UsersModule.html":{}}}],["incorrect",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["inject(auth_repository",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(auth_service",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["inject(exercises_repository",{"_index":449,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["inject(exercises_service",{"_index":392,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/PlansService.html":{}}}],["inject(plans_repository",{"_index":602,"title":{},"body":{"injectables/PlansService.html":{}}}],["inject(plans_service",{"_index":577,"title":{},"body":{"controllers/PlansController.html":{}}}],["inject(users_repository",{"_index":817,"title":{},"body":{"injectables/UsersService.html":{}}}],["inject(users_service",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["injectable",{"_index":77,"title":{"injectables/AppService.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":210,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ExercisesRepository.html":{},"injectables/PlansRepository.html":{},"injectables/UsersRepository.html":{}}}],["injectmodel(auth.name",{"_index":212,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["injectmodel(exercise.name",{"_index":428,"title":{},"body":{"injectables/ExercisesRepository.html":{}}}],["injectmodel(plan.name",{"_index":595,"title":{},"body":{"injectables/PlansRepository.html":{}}}],["injectmodel(user.name",{"_index":785,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["instalação",{"_index":990,"title":{},"body":{"index.html":{}}}],["installpara",{"_index":992,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":465,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["interface",{"_index":471,"title":{"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{}},"body":{"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["interfaces",{"_index":472,"title":{},"body":{"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"overview.html":{}}}],["interfaces/auth.controller.interface",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["interfaces/auth.repository.interface",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{}}}],["interfaces/auth.service.interface",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["interfaces/exercises.controller.interface",{"_index":387,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["interfaces/exercises.repository.interface",{"_index":416,"title":{},"body":{"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{}}}],["interfaces/exercises.service.interface",{"_index":385,"title":{},"body":{"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesService.html":{}}}],["interfaces/jwt",{"_index":525,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces/plans.repository.interface",{"_index":587,"title":{},"body":{"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{}}}],["interfaces/plans.service.interface",{"_index":572,"title":{},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{}}}],["interfaces/users.controller.interface",{"_index":750,"title":{},"body":{"controllers/UsersController.html":{}}}],["interfaces/users.repository.interface",{"_index":769,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["interfaces/users.service.interface",{"_index":749,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["internal",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["io",{"_index":967,"title":{},"body":{"index.html":{}}}],["iplansrepository",{"_index":490,"title":{"interfaces/IPlansRepository.html":{}},"body":{"interfaces/IPlansRepository.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"coverage.html":{}}}],["iplansservice",{"_index":497,"title":{"interfaces/IPlansService.html":{}},"body":{"interfaces/IPlansService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"coverage.html":{}}}],["isarray",{"_index":277,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/ExerciseDto.html":{},"classes/PlanDto.html":{},"classes/UserDto.html":{}}}],["isboolean",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PlanDto.html":{},"classes/TrainingDto.html":{},"classes/UserDto.html":{}}}],["isdate",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ShapeHistoryDto.html":{},"classes/UserDto.html":{}}}],["isdefined",{"_index":166,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/ExerciseDto.html":{},"classes/LoginDto.html":{},"classes/PlanDto.html":{},"classes/ShapeHistoryDto.html":{},"classes/TrainingDto.html":{},"classes/UserDto.html":{}}}],["isemail",{"_index":167,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["isemail(email",{"_index":820,"title":{},"body":{"injectables/UsersService.html":{}}}],["islocal",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":291,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/ExerciseDto.html":{},"classes/PlanDto.html":{},"classes/TrainingDto.html":{},"classes/UserDto.html":{}}}],["isnotempty",{"_index":168,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/ExerciseDto.html":{},"classes/LoginDto.html":{},"classes/PlanDto.html":{},"classes/ShapeHistoryDto.html":{},"classes/TrainingDto.html":{},"classes/UserDto.html":{}}}],["isnumber",{"_index":662,"title":{},"body":{"classes/ShapeHistoryDto.html":{}}}],["isoptional",{"_index":278,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/ExerciseDto.html":{},"classes/PlanDto.html":{},"classes/TrainingDto.html":{}}}],["ispasswordvalid",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":169,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/ExerciseDto.html":{},"classes/LoginDto.html":{},"classes/PlanDto.html":{},"classes/TrainingDto.html":{},"classes/UserDto.html":{}}}],["isurl",{"_index":279,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/ExerciseDto.html":{}}}],["iuserscontroller",{"_index":500,"title":{"interfaces/IUsersController.html":{}},"body":{"interfaces/IUsersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["iusersrepository",{"_index":508,"title":{"interfaces/IUsersRepository.html":{}},"body":{"interfaces/IUsersRepository.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iusersservice",{"_index":219,"title":{"interfaces/IUsersService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IUsersService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["jsonwebtoken",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":524,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":534,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":512,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":174,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lastname",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"overview.html":{}}}],["license",{"_index":1032,"title":{},"body":{"properties.html":{}}}],["linguagem",{"_index":977,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1016,"title":{},"body":{"index.html":{}}}],["load",{"_index":666,"title":{},"body":{"classes/Training.html":{},"classes/TrainingDto.html":{}}}],["load/weight",{"_index":684,"title":{},"body":{"classes/Training.html":{}}}],["load/weight'})@prop({type",{"_index":674,"title":{},"body":{"classes/Training.html":{}}}],["local",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["localconnection",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["localconnection}/${process.env.mongo_db",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["logger('authservice",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger('exercises",{"_index":442,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["logger('plansservice",{"_index":601,"title":{},"body":{"injectables/PlansService.html":{}}}],["logger('usersservice",{"_index":812,"title":{},"body":{"injectables/UsersService.html":{}}}],["login",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthService.html":{}}}],["login(@body",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(doc",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":110,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/IAuthController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["mapexercise",{"_index":443,"title":{},"body":{"injectables/ExercisesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapexercise(exe",{"_index":455,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["mapexercise(exercise",{"_index":459,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["mapuser",{"_index":815,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapuser(user",{"_index":818,"title":{},"body":{"injectables/UsersService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mergedprops",{"_index":832,"title":{},"body":{"injectables/UsersService.html":{}}}],["mergedprops[prop",{"_index":836,"title":{},"body":{"injectables/UsersService.html":{}}}],["mergedprops[prop].push(obj[prop",{"_index":837,"title":{},"body":{"injectables/UsersService.html":{}}}],["messages",{"_index":840,"title":{},"body":{"injectables/UsersService.html":{}}}],["messages.join",{"_index":841,"title":{},"body":{"injectables/UsersService.html":{}}}],["metadata",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["mim",{"_index":1009,"title":{},"body":{"index.html":{}}}],["miro",{"_index":969,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":925,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":999,"title":{},"body":{"index.html":{}}}],["model",{"_index":206,"title":{},"body":{"injectables/AuthRepository.html":{},"injectables/ExercisesRepository.html":{},"injectables/PlansRepository.html":{},"injectables/UsersRepository.html":{}}}],["modelagem",{"_index":962,"title":{},"body":{"index.html":{}}}],["modular",{"_index":984,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":981,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":99,"title":{},"body":{"classes/Auth.html":{},"injectables/AuthRepository.html":{},"injectables/ExercisesRepository.html":{},"classes/Plan.html":{},"injectables/PlansRepository.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"dependencies.html":{},"index.html":{}}}],["mongoose.schema.types.objectid",{"_index":558,"title":{},"body":{"classes/Plan.html":{},"classes/Routine.html":{},"classes/Training.html":{}}}],["mongoosemodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["muscle",{"_index":321,"title":{},"body":{"classes/Exercise.html":{},"classes/Plan.html":{}}}],["musculação",{"_index":946,"title":{},"body":{"index.html":{}}}],["na",{"_index":947,"title":{},"body":{"index.html":{}}}],["name",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"classes/Training.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["name'})@prop({type",{"_index":330,"title":{},"body":{"classes/Exercise.html":{},"classes/Plan.html":{},"classes/User.html":{}}}],["nest",{"_index":961,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":980,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"classes/Exercise.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"classes/Plan.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":382,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"classes/LoginDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["no_content_204",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":979,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":958,"title":{},"body":{"index.html":{}}}],["not_found_404",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["not_found_404})@apiinternalservererrorresponse({description",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["not_found_404})@apiokresponse({description",{"_index":372,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["notes",{"_index":265,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"miscellaneous/variables.html":{}}}],["notes'})@prop({type",{"_index":677,"title":{},"body":{"classes/Training.html":{}}}],["notfoundexception",{"_index":376,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(`email",{"_index":757,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(`exercise",{"_index":400,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{}}}],["notfoundexception(`id",{"_index":405,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(`user",{"_index":831,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":991,"title":{},"body":{"index.html":{}}}],["null",{"_index":458,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["number",{"_index":640,"title":{},"body":{"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{}}}],["o",{"_index":959,"title":{},"body":{"index.html":{}}}],["obj",{"_index":835,"title":{},"body":{"injectables/UsersService.html":{}}}],["obj[prop",{"_index":838,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.entries(mergedprops).map",{"_index":839,"title":{},"body":{"injectables/UsersService.html":{}}}],["odm",{"_index":982,"title":{},"body":{"index.html":{}}}],["ok",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok_200",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oliveira",{"_index":1012,"title":{},"body":{"index.html":{}}}],["opt",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.$or.focusmuscle",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.$or.push",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"overview.html":{}}}],["overview",{"_index":1025,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":898,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":938,"title":{},"body":{"index.html":{}}}],["param",{"_index":375,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":409,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":363,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"miscellaneous/variables.html":{}}}],["params.focusmuscle",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.focusmuscle?.length",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.name",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.utils",{"_index":448,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["params.utils.ts",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paramsdto",{"_index":360,"title":{"classes/ParamsDto.html":{}},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"classes/ParamsDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":523,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":520,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":530,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IAuthService.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["password'})@prop({type",{"_index":711,"title":{},"body":{"classes/User.html":{}}}],["passwordlogin",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passworduser",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":377,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id/disable",{"_index":763,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id/disable')@useguards(undefined)@apibearerauth()@apiunauthorizedresponse({description",{"_index":734,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id/enable",{"_index":760,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id/enable')@useguards(undefined)@apibearerauth()@apiunauthorizedresponse({description",{"_index":737,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id/shape",{"_index":746,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id/update",{"_index":408,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id/update')@useguards(undefined)@apibearerauth()@apiunauthorizedresponse({description",{"_index":371,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["payload",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":526,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":514,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["plan",{"_index":496,"title":{"classes/Plan.html":{}},"body":{"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"classes/Plan.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"coverage.html":{}}}],["plan'})@prop({type",{"_index":550,"title":{},"body":{"classes/Plan.html":{}}}],["plan.dto",{"_index":493,"title":{},"body":{"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{}}}],["plan.dto.ts",{"_index":282,"title":{},"body":{"classes/CreatePlanDto.html":{},"coverage.html":{}}}],["plan.dto.ts:18",{"_index":286,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:24",{"_index":285,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:31",{"_index":290,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.dto.ts:36",{"_index":288,"title":{},"body":{"classes/CreatePlanDto.html":{}}}],["plan.model",{"_index":573,"title":{},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{}}}],["plan.name",{"_index":590,"title":{},"body":{"modules/PlansModule.html":{}}}],["plandocument",{"_index":556,"title":{},"body":{"classes/Plan.html":{},"injectables/PlansRepository.html":{},"miscellaneous/typealiases.html":{}}}],["plandto",{"_index":494,"title":{"classes/PlanDto.html":{}},"body":{"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"coverage.html":{}}}],["plans",{"_index":557,"title":{},"body":{"classes/Plan.html":{},"controllers/PlansController.html":{}}}],["plans.controller",{"_index":582,"title":{},"body":{"modules/PlansModule.html":{}}}],["plans.repository",{"_index":586,"title":{},"body":{"modules/PlansModule.html":{}}}],["plans.service",{"_index":584,"title":{},"body":{"modules/PlansModule.html":{}}}],["plans/plans.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["plans_controller",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["plans_repository",{"_index":495,"title":{},"body":{"interfaces/IPlansRepository.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plans_service",{"_index":499,"title":{},"body":{"interfaces/IPlansService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["planschema",{"_index":559,"title":{},"body":{"classes/Plan.html":{},"modules/PlansModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["planscontroller",{"_index":567,"title":{"controllers/PlansController.html":{}},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{},"coverage.html":{}}}],["plansmodule",{"_index":42,"title":{"modules/PlansModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlansModule.html":{},"modules.html":{},"overview.html":{}}}],["plansrepository",{"_index":585,"title":{"injectables/PlansRepository.html":{}},"body":{"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"coverage.html":{}}}],["plansservice",{"_index":583,"title":{"injectables/PlansService.html":{}},"body":{"modules/PlansModule.html":{},"injectables/PlansService.html":{},"coverage.html":{}}}],["portfolio.vercel.app",{"_index":1015,"title":{},"body":{"index.html":{}}}],["portfólio",{"_index":1013,"title":{},"body":{"index.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["post()@apiunauthorizedresponse({description",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useguards(undefined)@apibearerauth()@apiunauthorizedresponse({description",{"_index":355,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process.env.environment_local",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_secret",{"_index":533,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["production",{"_index":1001,"title":{},"body":{"index.html":{}}}],["projeto",{"_index":994,"title":{},"body":{"index.html":{}}}],["promise",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":95,"title":{},"body":{"classes/Auth.html":{},"classes/Exercise.html":{},"classes/Plan.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["prop({type",{"_index":90,"title":{},"body":{"classes/Auth.html":{},"classes/Routine.html":{},"classes/Training.html":{}}}],["properties",{"_index":86,"title":{"properties.html":{}},"body":{"classes/Auth.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/UsersModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["push",{"_index":788,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["query",{"_index":378,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["record",{"_index":833,"title":{},"body":{"injectables/UsersService.html":{}}}],["ref",{"_index":551,"title":{},"body":{"classes/Plan.html":{},"classes/Routine.html":{},"classes/Training.html":{}}}],["reflect",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registered",{"_index":642,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["repetitions",{"_index":667,"title":{},"body":{"classes/Training.html":{},"classes/TrainingDto.html":{}}}],["repetitions'})@prop({type",{"_index":679,"title":{},"body":{"classes/Training.html":{}}}],["repository",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["request",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":91,"title":{},"body":{"classes/Auth.html":{},"classes/Exercise.html":{},"classes/Plan.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"overview.html":{}}}],["response",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rest",{"_index":983,"title":{},"body":{"index.html":{}}}],["result",{"_index":467,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["result.join('\\n",{"_index":842,"title":{},"body":{"injectables/UsersService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["rotinas",{"_index":942,"title":{},"body":{"index.html":{}}}],["routine",{"_index":605,"title":{"classes/Routine.html":{}},"body":{"classes/Routine.html":{},"coverage.html":{}}}],["routinedocument",{"_index":614,"title":{},"body":{"classes/Routine.html":{},"miscellaneous/typealiases.html":{}}}],["routines",{"_index":615,"title":{},"body":{"classes/Routine.html":{}}}],["routines.controller",{"_index":626,"title":{},"body":{"modules/RoutinesModule.html":{}}}],["routines.service",{"_index":625,"title":{},"body":{"modules/RoutinesModule.html":{}}}],["routines/routines.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["routineschema",{"_index":616,"title":{},"body":{"classes/Routine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routinescontroller",{"_index":618,"title":{"controllers/RoutinesController.html":{}},"body":{"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"coverage.html":{}}}],["routinesmodule",{"_index":43,"title":{"modules/RoutinesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoutinesModule.html":{},"modules.html":{},"overview.html":{}}}],["routinesrepository",{"_index":627,"title":{"injectables/RoutinesRepository.html":{}},"body":{"injectables/RoutinesRepository.html":{},"coverage.html":{}}}],["routinesservice",{"_index":623,"title":{"injectables/RoutinesService.html":{}},"body":{"modules/RoutinesModule.html":{},"injectables/RoutinesService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":996,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":96,"title":{},"body":{"classes/Auth.html":{},"modules/AuthModule.html":{},"classes/Exercise.html":{},"modules/ExercisesModule.html":{},"classes/Plan.html":{},"modules/PlansModule.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":97,"title":{},"body":{"classes/Auth.html":{},"classes/Exercise.html":{},"classes/Plan.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(auth",{"_index":104,"title":{},"body":{"classes/Auth.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(exercise",{"_index":339,"title":{},"body":{"classes/Exercise.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(plan",{"_index":560,"title":{},"body":{"classes/Plan.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(routine",{"_index":617,"title":{},"body":{"classes/Routine.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(shapehistory",{"_index":653,"title":{},"body":{"classes/ShapeHistory.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(training",{"_index":685,"title":{},"body":{"classes/Training.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":718,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":532,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["series",{"_index":668,"title":{},"body":{"classes/Training.html":{},"classes/TrainingDto.html":{}}}],["series'})@prop({type",{"_index":681,"title":{},"body":{"classes/Training.html":{}}}],["server",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server_error_500",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server_error_500})@apiokresponse({description",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["service",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["shape",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["shape.age",{"_index":789,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["shape.bmi",{"_index":792,"title":{},"body":{"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["shape.height",{"_index":790,"title":{},"body":{"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["shape.weight",{"_index":791,"title":{},"body":{"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["shapehistory",{"_index":630,"title":{"classes/ShapeHistory.html":{}},"body":{"classes/ShapeHistory.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["shapehistorydocument",{"_index":650,"title":{},"body":{"classes/ShapeHistory.html":{},"miscellaneous/typealiases.html":{}}}],["shapehistorydto",{"_index":311,"title":{"classes/ShapeHistoryDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"classes/ShapeHistoryDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["shapehistorydto.age",{"_index":843,"title":{},"body":{"injectables/UsersService.html":{}}}],["shapehistorydto.bmi",{"_index":847,"title":{},"body":{"injectables/UsersService.html":{}}}],["shapehistorydto.height",{"_index":845,"title":{},"body":{"injectables/UsersService.html":{}}}],["shapehistorydto.weight",{"_index":846,"title":{},"body":{"injectables/UsersService.html":{}}}],["shapehistoryschema",{"_index":652,"title":{},"body":{"classes/ShapeHistory.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/dtos/params.dto",{"_index":389,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{}}}],["shared/models/training.model",{"_index":555,"title":{},"body":{"classes/Plan.html":{},"classes/Routine.html":{}}}],["shared/utils/build",{"_index":447,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["shared/utils/http",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["signoptions",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"modules/ExercisesModule.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"controllers/RoutinesController.html":{},"modules/RoutinesModule.html":{},"injectables/RoutinesRepository.html":{},"injectables/RoutinesService.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["src/.../auth.controller.interface.ts",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.model.ts",{"_index":1036,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.repository.interface.ts",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.interface.ts",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../build",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../credentials.utils.ts",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exercise.mapper.ts",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exercise.model.ts",{"_index":1037,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../exercises.controller.interface.ts",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exercises.repository.interface.ts",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exercises.service.interface.ts",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../plan.model.ts",{"_index":1038,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../plans.controller.interface.ts",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../plans.repository.interface.ts",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../plans.service.interface.ts",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../routine.model.ts",{"_index":1039,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../shape",{"_index":1040,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../training.model.ts",{"_index":1041,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.mapper.ts",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":1042,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../users.controller.interface.ts",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.repository.interface.ts",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.interface.ts",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.service.ts",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:39",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.model.ts",{"_index":85,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/auth.model.ts:12",{"_index":94,"title":{},"body":{"classes/Auth.html":{}}}],["src/modules/auth/auth.model.ts:9",{"_index":93,"title":{},"body":{"classes/Auth.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.repository.ts",{"_index":203,"title":{},"body":{"injectables/AuthRepository.html":{},"coverage.html":{}}}],["src/modules/auth/auth.repository.ts:14",{"_index":209,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["src/modules/auth/auth.repository.ts:8",{"_index":207,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:24",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:34",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:39",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:43",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dtos/auth.dto.ts",{"_index":160,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:10",{"_index":162,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:16",{"_index":164,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/modules/auth/dtos/login.dto.ts",{"_index":537,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/login.dto.ts:10",{"_index":538,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dtos/login.dto.ts:16",{"_index":539,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/interfaces/auth.controller.interface.ts",{"_index":473,"title":{},"body":{"interfaces/IAuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/interfaces/auth.repository.interface.ts",{"_index":476,"title":{},"body":{"interfaces/IAuthRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/interfaces/auth.service.interface.ts",{"_index":477,"title":{},"body":{"interfaces/IAuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/interfaces/jwt",{"_index":513,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts",{"_index":515,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts:12",{"_index":517,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategy/jwt.strategy.ts:23",{"_index":519,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/utils/credentials.utils.ts",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/exercises/dtos/create",{"_index":261,"title":{},"body":{"classes/CreateExerciseDto.html":{},"coverage.html":{}}}],["src/modules/exercises/dtos/exercise.dto.ts",{"_index":341,"title":{},"body":{"classes/ExerciseDto.html":{},"coverage.html":{}}}],["src/modules/exercises/dtos/exercise.dto.ts:19",{"_index":343,"title":{},"body":{"classes/ExerciseDto.html":{}}}],["src/modules/exercises/dtos/exercise.dto.ts:25",{"_index":345,"title":{},"body":{"classes/ExerciseDto.html":{}}}],["src/modules/exercises/dtos/exercise.dto.ts:31",{"_index":342,"title":{},"body":{"classes/ExerciseDto.html":{}}}],["src/modules/exercises/dtos/exercise.dto.ts:37",{"_index":344,"title":{},"body":{"classes/ExerciseDto.html":{}}}],["src/modules/exercises/dtos/exercise.dto.ts:43",{"_index":347,"title":{},"body":{"classes/ExerciseDto.html":{}}}],["src/modules/exercises/dtos/exercise.dto.ts:48",{"_index":346,"title":{},"body":{"classes/ExerciseDto.html":{}}}],["src/modules/exercises/exercise.model.ts",{"_index":317,"title":{},"body":{"classes/Exercise.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/exercises/exercise.model.ts:13",{"_index":331,"title":{},"body":{"classes/Exercise.html":{}}}],["src/modules/exercises/exercise.model.ts:17",{"_index":324,"title":{},"body":{"classes/Exercise.html":{}}}],["src/modules/exercises/exercise.model.ts:21",{"_index":329,"title":{},"body":{"classes/Exercise.html":{}}}],["src/modules/exercises/exercise.model.ts:25",{"_index":335,"title":{},"body":{"classes/Exercise.html":{}}}],["src/modules/exercises/exercise.model.ts:29",{"_index":333,"title":{},"body":{"classes/Exercise.html":{}}}],["src/modules/exercises/exercise.model.ts:9",{"_index":325,"title":{},"body":{"classes/Exercise.html":{}}}],["src/modules/exercises/exercises.controller.ts",{"_index":349,"title":{},"body":{"controllers/ExercisesController.html":{},"coverage.html":{}}}],["src/modules/exercises/exercises.controller.ts:102",{"_index":358,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["src/modules/exercises/exercises.controller.ts:113",{"_index":373,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["src/modules/exercises/exercises.controller.ts:57",{"_index":366,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["src/modules/exercises/exercises.controller.ts:69",{"_index":362,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["src/modules/exercises/exercises.controller.ts:85",{"_index":369,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["src/modules/exercises/exercises.module.ts",{"_index":411,"title":{},"body":{"modules/ExercisesModule.html":{}}}],["src/modules/exercises/exercises.repository.ts",{"_index":420,"title":{},"body":{"injectables/ExercisesRepository.html":{},"coverage.html":{}}}],["src/modules/exercises/exercises.repository.ts:10",{"_index":421,"title":{},"body":{"injectables/ExercisesRepository.html":{}}}],["src/modules/exercises/exercises.repository.ts:16",{"_index":422,"title":{},"body":{"injectables/ExercisesRepository.html":{}}}],["src/modules/exercises/exercises.repository.ts:20",{"_index":424,"title":{},"body":{"injectables/ExercisesRepository.html":{}}}],["src/modules/exercises/exercises.repository.ts:24",{"_index":425,"title":{},"body":{"injectables/ExercisesRepository.html":{}}}],["src/modules/exercises/exercises.repository.ts:28",{"_index":423,"title":{},"body":{"injectables/ExercisesRepository.html":{}}}],["src/modules/exercises/exercises.repository.ts:32",{"_index":426,"title":{},"body":{"injectables/ExercisesRepository.html":{}}}],["src/modules/exercises/exercises.service.ts",{"_index":435,"title":{},"body":{"injectables/ExercisesService.html":{},"coverage.html":{}}}],["src/modules/exercises/exercises.service.ts:21",{"_index":436,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["src/modules/exercises/exercises.service.ts:28",{"_index":439,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["src/modules/exercises/exercises.service.ts:36",{"_index":438,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["src/modules/exercises/exercises.service.ts:51",{"_index":440,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["src/modules/exercises/exercises.service.ts:65",{"_index":437,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["src/modules/exercises/exercises.service.ts:80",{"_index":441,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["src/modules/exercises/interfaces/exercises.controller.interface.ts",{"_index":485,"title":{},"body":{"interfaces/IExercisesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/exercises/interfaces/exercises.repository.interface.ts",{"_index":488,"title":{},"body":{"interfaces/IExercisesRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/exercises/interfaces/exercises.service.interface.ts",{"_index":489,"title":{},"body":{"interfaces/IExercisesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/exercises/utils/exercise.mapper.ts",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/plans/dtos/create",{"_index":281,"title":{},"body":{"classes/CreatePlanDto.html":{},"coverage.html":{}}}],["src/modules/plans/dtos/plan.dto.ts",{"_index":561,"title":{},"body":{"classes/PlanDto.html":{},"coverage.html":{}}}],["src/modules/plans/dtos/plan.dto.ts:20",{"_index":563,"title":{},"body":{"classes/PlanDto.html":{}}}],["src/modules/plans/dtos/plan.dto.ts:26",{"_index":564,"title":{},"body":{"classes/PlanDto.html":{}}}],["src/modules/plans/dtos/plan.dto.ts:32",{"_index":562,"title":{},"body":{"classes/PlanDto.html":{}}}],["src/modules/plans/dtos/plan.dto.ts:39",{"_index":566,"title":{},"body":{"classes/PlanDto.html":{}}}],["src/modules/plans/dtos/plan.dto.ts:44",{"_index":565,"title":{},"body":{"classes/PlanDto.html":{}}}],["src/modules/plans/interfaces/plans.controller.interface.ts",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/plans/interfaces/plans.repository.interface.ts",{"_index":491,"title":{},"body":{"interfaces/IPlansRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/plans/interfaces/plans.service.interface.ts",{"_index":498,"title":{},"body":{"interfaces/IPlansService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/plans/plan.model.ts",{"_index":543,"title":{},"body":{"classes/Plan.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/plans/plan.model.ts:11",{"_index":545,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/plan.model.ts:15",{"_index":546,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/plan.model.ts:19",{"_index":544,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/plan.model.ts:27",{"_index":553,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/plan.model.ts:34",{"_index":548,"title":{},"body":{"classes/Plan.html":{}}}],["src/modules/plans/plans.controller.ts",{"_index":568,"title":{},"body":{"controllers/PlansController.html":{},"coverage.html":{}}}],["src/modules/plans/plans.controller.ts:45",{"_index":571,"title":{},"body":{"controllers/PlansController.html":{}}}],["src/modules/plans/plans.controller.ts:58",{"_index":570,"title":{},"body":{"controllers/PlansController.html":{}}}],["src/modules/plans/plans.module.ts",{"_index":581,"title":{},"body":{"modules/PlansModule.html":{}}}],["src/modules/plans/plans.repository.ts",{"_index":591,"title":{},"body":{"injectables/PlansRepository.html":{},"coverage.html":{}}}],["src/modules/plans/plans.repository.ts:10",{"_index":592,"title":{},"body":{"injectables/PlansRepository.html":{}}}],["src/modules/plans/plans.repository.ts:16",{"_index":594,"title":{},"body":{"injectables/PlansRepository.html":{}}}],["src/modules/plans/plans.repository.ts:20",{"_index":593,"title":{},"body":{"injectables/PlansRepository.html":{}}}],["src/modules/plans/plans.service.ts",{"_index":597,"title":{},"body":{"injectables/PlansService.html":{},"coverage.html":{}}}],["src/modules/plans/plans.service.ts:22",{"_index":598,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/modules/plans/plans.service.ts:31",{"_index":600,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/modules/plans/plans.service.ts:39",{"_index":599,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/modules/routines/routine.model.ts",{"_index":606,"title":{},"body":{"classes/Routine.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/routines/routine.model.ts:12",{"_index":611,"title":{},"body":{"classes/Routine.html":{}}}],["src/modules/routines/routine.model.ts:15",{"_index":608,"title":{},"body":{"classes/Routine.html":{}}}],["src/modules/routines/routine.model.ts:18",{"_index":609,"title":{},"body":{"classes/Routine.html":{}}}],["src/modules/routines/routine.model.ts:25",{"_index":613,"title":{},"body":{"classes/Routine.html":{}}}],["src/modules/routines/routine.model.ts:28",{"_index":612,"title":{},"body":{"classes/Routine.html":{}}}],["src/modules/routines/routine.model.ts:9",{"_index":610,"title":{},"body":{"classes/Routine.html":{}}}],["src/modules/routines/routines.controller.ts",{"_index":619,"title":{},"body":{"controllers/RoutinesController.html":{},"coverage.html":{}}}],["src/modules/routines/routines.module.ts",{"_index":624,"title":{},"body":{"modules/RoutinesModule.html":{}}}],["src/modules/routines/routines.repository.ts",{"_index":628,"title":{},"body":{"injectables/RoutinesRepository.html":{},"coverage.html":{}}}],["src/modules/routines/routines.service.ts",{"_index":629,"title":{},"body":{"injectables/RoutinesService.html":{},"coverage.html":{}}}],["src/modules/shared/dtos/params.dto",{"_index":486,"title":{},"body":{"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{}}}],["src/modules/shared/dtos/params.dto.ts",{"_index":540,"title":{},"body":{"classes/ParamsDto.html":{},"coverage.html":{}}}],["src/modules/shared/dtos/params.dto.ts:2",{"_index":542,"title":{},"body":{"classes/ParamsDto.html":{}}}],["src/modules/shared/dtos/params.dto.ts:3",{"_index":541,"title":{},"body":{"classes/ParamsDto.html":{}}}],["src/modules/shared/dtos/training.dto.ts",{"_index":687,"title":{},"body":{"classes/TrainingDto.html":{},"coverage.html":{}}}],["src/modules/shared/dtos/training.dto.ts:16",{"_index":691,"title":{},"body":{"classes/TrainingDto.html":{}}}],["src/modules/shared/dtos/training.dto.ts:23",{"_index":690,"title":{},"body":{"classes/TrainingDto.html":{}}}],["src/modules/shared/dtos/training.dto.ts:29",{"_index":696,"title":{},"body":{"classes/TrainingDto.html":{}}}],["src/modules/shared/dtos/training.dto.ts:35",{"_index":695,"title":{},"body":{"classes/TrainingDto.html":{}}}],["src/modules/shared/dtos/training.dto.ts:41",{"_index":692,"title":{},"body":{"classes/TrainingDto.html":{}}}],["src/modules/shared/dtos/training.dto.ts:46",{"_index":694,"title":{},"body":{"classes/TrainingDto.html":{}}}],["src/modules/shared/dtos/training.dto.ts:51",{"_index":689,"title":{},"body":{"classes/TrainingDto.html":{}}}],["src/modules/shared/interfaces/default.controller.interface.ts",{"_index":480,"title":{},"body":{"interfaces/IDefaultController.html":{},"coverage.html":{}}}],["src/modules/shared/models/training.model",{"_index":292,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/PlanDto.html":{}}}],["src/modules/shared/models/training.model.ts",{"_index":663,"title":{},"body":{"classes/Training.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/shared/models/training.model.ts:10",{"_index":673,"title":{},"body":{"classes/Training.html":{}}}],["src/modules/shared/models/training.model.ts:13",{"_index":676,"title":{},"body":{"classes/Training.html":{}}}],["src/modules/shared/models/training.model.ts:19",{"_index":672,"title":{},"body":{"classes/Training.html":{}}}],["src/modules/shared/models/training.model.ts:23",{"_index":682,"title":{},"body":{"classes/Training.html":{}}}],["src/modules/shared/models/training.model.ts:27",{"_index":680,"title":{},"body":{"classes/Training.html":{}}}],["src/modules/shared/models/training.model.ts:31",{"_index":675,"title":{},"body":{"classes/Training.html":{}}}],["src/modules/shared/models/training.model.ts:35",{"_index":678,"title":{},"body":{"classes/Training.html":{}}}],["src/modules/shared/models/training.model.ts:39",{"_index":671,"title":{},"body":{"classes/Training.html":{}}}],["src/modules/shared/utils/build",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/shared/utils/http",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/dtos/create",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/dtos",{"_index":478,"title":{},"body":{"interfaces/IAuthService.html":{}}}],["src/modules/users/dtos/shape",{"_index":654,"title":{},"body":{"classes/ShapeHistoryDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/user.dto",{"_index":528,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/users/dtos/user.dto.ts",{"_index":719,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/user.dto.ts:21",{"_index":725,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:28",{"_index":723,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:34",{"_index":727,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:40",{"_index":724,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:46",{"_index":726,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:52",{"_index":722,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:58",{"_index":720,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:64",{"_index":728,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/interfaces/users.controller.interface.ts",{"_index":501,"title":{},"body":{"interfaces/IUsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/interfaces/users.repository.interface.ts",{"_index":509,"title":{},"body":{"interfaces/IUsersRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/interfaces/users.service.interface",{"_index":527,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/users/interfaces/users.service.interface.ts",{"_index":511,"title":{},"body":{"interfaces/IUsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/shape",{"_index":631,"title":{},"body":{"classes/ShapeHistory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/user.model.ts",{"_index":697,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/user.model.ts:11",{"_index":708,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.model.ts:15",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.model.ts:19",{"_index":712,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.model.ts:23",{"_index":707,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.model.ts:27",{"_index":710,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.model.ts:31",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.model.ts:35",{"_index":700,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.model.ts:39",{"_index":714,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":730,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:112",{"_index":744,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:123",{"_index":748,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:137",{"_index":738,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:148",{"_index":735,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:56",{"_index":739,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:69",{"_index":732,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:81",{"_index":742,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:97",{"_index":743,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":766,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.repository.ts",{"_index":773,"title":{},"body":{"injectables/UsersRepository.html":{},"coverage.html":{}}}],["src/modules/users/users.repository.ts:15",{"_index":775,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.repository.ts:19",{"_index":780,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.repository.ts:23",{"_index":782,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.repository.ts:27",{"_index":781,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.repository.ts:32",{"_index":783,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.repository.ts:36",{"_index":784,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.repository.ts:52",{"_index":777,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.repository.ts:56",{"_index":779,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.repository.ts:60",{"_index":778,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.repository.ts:9",{"_index":774,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/modules/users/users.service.ts",{"_index":794,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:107",{"_index":808,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:127",{"_index":811,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:160",{"_index":799,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:172",{"_index":801,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:185",{"_index":800,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:20",{"_index":797,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:27",{"_index":802,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:35",{"_index":804,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:49",{"_index":803,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:66",{"_index":806,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:70",{"_index":798,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:93",{"_index":810,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/utils/user.mapper.ts",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":997,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1000,"title":{},"body":{"index.html":{}}}],["start:prodtestes",{"_index":1002,"title":{},"body":{"index.html":{}}}],["started",{"_index":929,"title":{"index.html":{}},"body":{}}],["statements",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":716,"title":{},"body":{"classes/User.html":{}}}],["status'})@prop({type",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["status.utils",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["status.utils.ts",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["str",{"_index":853,"title":{},"body":{"injectables/UsersService.html":{}}}],["strategy",{"_index":522,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy/jwt.strategy",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"classes/Routine.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":531,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1020,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":709,"title":{},"body":{"classes/User.html":{}}}],["svg",{"_index":1021,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":972,"title":{},"body":{"index.html":{}}}],["t",{"_index":483,"title":{},"body":{"interfaces/IDefaultController.html":{}}}],["table",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["tecnologias",{"_index":975,"title":{},"body":{"index.html":{}}}],["test",{"_index":1005,"title":{},"body":{"index.html":{}}}],["test:covsobre",{"_index":1008,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1007,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1004,"title":{},"body":{"index.html":{}}}],["then((errors",{"_index":850,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.generatetoken(user",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbyemail(user.email",{"_index":826,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getbyid(id",{"_index":858,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.hashedpassword(user.password",{"_index":827,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign(payload",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(error",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["this.logger.error(str",{"_index":855,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.model.create(auth",{"_index":213,"title":{},"body":{"injectables/AuthRepository.html":{}}}],["this.model.create(exercise",{"_index":429,"title":{},"body":{"injectables/ExercisesRepository.html":{}}}],["this.model.create(plan",{"_index":596,"title":{},"body":{"injectables/PlansRepository.html":{}}}],["this.model.create(user",{"_index":786,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["this.model.deleteone",{"_index":793,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["this.model.find",{"_index":430,"title":{},"body":{"injectables/ExercisesRepository.html":{},"injectables/PlansRepository.html":{},"injectables/UsersRepository.html":{}}}],["this.model.find(params",{"_index":432,"title":{},"body":{"injectables/ExercisesRepository.html":{}}}],["this.model.findbyid(id",{"_index":431,"title":{},"body":{"injectables/ExercisesRepository.html":{},"injectables/UsersRepository.html":{}}}],["this.model.findone",{"_index":787,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["this.model.updateone",{"_index":433,"title":{},"body":{"injectables/ExercisesRepository.html":{},"injectables/UsersRepository.html":{}}}],["this.repository.create(doc",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.repository.create(exercise",{"_index":464,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["this.repository.create(plan",{"_index":604,"title":{},"body":{"injectables/PlansService.html":{}}}],["this.repository.create(user",{"_index":828,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repository.delete(id",{"_index":860,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repository.disable(id",{"_index":865,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repository.enable(id",{"_index":862,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repository.findbyparams(parameters",{"_index":452,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["this.repository.getall",{"_index":450,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["this.repository.getbyemail(email",{"_index":821,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repository.getbyid(id",{"_index":457,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/UsersService.html":{}}}],["this.repository.update(id",{"_index":468,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/UsersService.html":{}}}],["this.repository.updateshape(id",{"_index":859,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.service.create(exercise",{"_index":407,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["this.service.create(plan",{"_index":578,"title":{},"body":{"controllers/PlansController.html":{}}}],["this.service.create(user",{"_index":753,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.service.disable(id",{"_index":765,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.service.enable(id",{"_index":762,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.service.findbyparams(params",{"_index":397,"title":{},"body":{"controllers/ExercisesController.html":{}}}],["this.service.getall",{"_index":394,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["this.service.getbyemail(email",{"_index":756,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.service.getbyid(id",{"_index":404,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["this.service.login(email",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.update(id",{"_index":410,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/UsersController.html":{}}}],["this.service.updateshape(id",{"_index":759,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.transformstring(arr",{"_index":854,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.getbyemail(email",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["throw",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PlansService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["timestamps",{"_index":102,"title":{},"body":{"classes/Auth.html":{},"classes/Exercise.html":{},"classes/Plan.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{}}}],["token",{"_index":88,"title":{},"body":{"classes/Auth.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["training",{"_index":283,"title":{"classes/Training.html":{}},"body":{"classes/CreatePlanDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"classes/Routine.html":{},"classes/Training.html":{},"coverage.html":{}}}],["trainingdocument",{"_index":683,"title":{},"body":{"classes/Training.html":{},"miscellaneous/typealiases.html":{}}}],["trainingdto",{"_index":686,"title":{"classes/TrainingDto.html":{}},"body":{"classes/TrainingDto.html":{},"coverage.html":{}}}],["trainingschema",{"_index":554,"title":{},"body":{"classes/Plan.html":{},"classes/Routine.html":{},"classes/Training.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformstring",{"_index":796,"title":{},"body":{"injectables/UsersService.html":{}}}],["transformstring(arr",{"_index":807,"title":{},"body":{"injectables/UsersService.html":{}}}],["treinos",{"_index":941,"title":{},"body":{"index.html":{}}}],["true",{"_index":92,"title":{},"body":{"classes/Auth.html":{},"classes/Exercise.html":{},"classes/Plan.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/Training.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["try",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["type",{"_index":89,"title":{},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IAuthController.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IPlansRepository.html":{},"interfaces/IPlansService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ParamsDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"controllers/PlansController.html":{},"injectables/PlansRepository.html":{},"injectables/PlansService.html":{},"classes/Routine.html":{},"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"classes/Training.html":{},"classes/TrainingDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1034,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":956,"title":{},"body":{"index.html":{}}}],["uma",{"_index":936,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorized_401",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unauthorized_401})@apibadrequestresponse({description",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception(`user",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":323,"title":{},"body":{"classes/Exercise.html":{},"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{},"classes/Plan.html":{},"controllers/PlansController.html":{},"classes/Routine.html":{},"classes/Training.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["undefined})@apibody({type",{"_index":357,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["undefined})@prop({type",{"_index":322,"title":{},"body":{"classes/Exercise.html":{},"classes/Plan.html":{},"classes/User.html":{}}}],["unit",{"_index":1003,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1033,"title":{},"body":{"properties.html":{}}}],["update",{"_index":353,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"interfaces/IDefaultController.html":{},"interfaces/IExercisesController.html":{},"interfaces/IExercisesRepository.html":{},"interfaces/IExercisesService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["update')@useguards(undefined)@apibearerauth()@apiunauthorizedresponse({description",{"_index":747,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":758,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":370,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesRepository.html":{},"injectables/ExercisesService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["updateshape",{"_index":505,"title":{},"body":{"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["updateshape(id",{"_index":745,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["uri",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":327,"title":{},"body":{"classes/Exercise.html":{}}}],["useclass",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"modules/ExercisesModule.html":{},"modules/PlansModule.html":{},"modules/UsersModule.html":{}}}],["usefactory",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":374,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard('jwt",{"_index":393,"title":{},"body":{"controllers/ExercisesController.html":{},"controllers/PlansController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":225,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"injectables/JwtStrategy.html":{},"classes/Plan.html":{},"classes/ShapeHistory.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.active",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.birthdate",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:20",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:32",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:38",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:44",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:50",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:56",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["user.firstname",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.id",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user.lastname",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.model",{"_index":506,"title":{},"body":{"interfaces/IUsersController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{}}}],["user.name",{"_index":772,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["user.shape",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdocument",{"_index":715,"title":{},"body":{"classes/User.html":{},"injectables/UsersRepository.html":{},"miscellaneous/typealiases.html":{}}}],["userdto",{"_index":117,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IAuthService.html":{},"interfaces/IUsersController.html":{},"interfaces/IUsersRepository.html":{},"interfaces/IUsersService.html":{},"injectables/JwtStrategy.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":284,"title":{},"body":{"classes/CreatePlanDto.html":{},"classes/Plan.html":{},"classes/PlanDto.html":{},"classes/Routine.html":{}}}],["users",{"_index":552,"title":{},"body":{"classes/Plan.html":{},"classes/Routine.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":768,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.repository",{"_index":771,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":767,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/dtos/dtos",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["users/dtos/user.dto",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/interfaces/users.service.interface",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["users/users.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["users_controller",{"_index":507,"title":{},"body":{"interfaces/IUsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users_repository",{"_index":510,"title":{},"body":{"interfaces/IUsersRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users_service",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IUsersService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema",{"_index":717,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":729,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":44,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":770,"title":{"injectables/UsersRepository.html":{}},"body":{"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"coverage.html":{}}}],["usersservice",{"_index":189,"title":{"injectables/UsersService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["utilizadas",{"_index":976,"title":{},"body":{"index.html":{}}}],["utils/credentials.utils",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["utils/exercise.mapper",{"_index":444,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["utils/user.mapper",{"_index":816,"title":{},"body":{"injectables/UsersService.html":{}}}],["valid",{"_index":819,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate",{"_index":445,"title":{},"body":{"injectables/ExercisesService.html":{},"injectables/JwtStrategy.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{}}}],["validate(exercise",{"_index":461,"title":{},"body":{"injectables/ExercisesService.html":{}}}],["validate(payload",{"_index":518,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(plan",{"_index":603,"title":{},"body":{"injectables/PlansService.html":{}}}],["validate(shapehistorydto",{"_index":849,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate(user",{"_index":824,"title":{},"body":{"injectables/UsersService.html":{}}}],["validator",{"_index":170,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExerciseDto.html":{},"classes/CreatePlanDto.html":{},"classes/CreateUserDto.html":{},"classes/ExerciseDto.html":{},"injectables/ExercisesService.html":{},"classes/LoginDto.html":{},"classes/PlanDto.html":{},"injectables/PlansService.html":{},"classes/ShapeHistoryDto.html":{},"classes/TrainingDto.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["validobj",{"_index":848,"title":{},"body":{"injectables/UsersService.html":{}}}],["value",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesService.html":{},"injectables/PlansService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1043,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifytoken",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["verifytoken(token",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1030,"title":{},"body":{"properties.html":{}}}],["video",{"_index":266,"title":{},"body":{"classes/CreateExerciseDto.html":{},"classes/Exercise.html":{},"classes/ExerciseDto.html":{},"miscellaneous/variables.html":{}}}],["video'})@prop({type",{"_index":334,"title":{},"body":{"classes/Exercise.html":{}}}],["watch",{"_index":998,"title":{},"body":{"index.html":{}}}],["web",{"_index":937,"title":{},"body":{"index.html":{}}}],["weight",{"_index":636,"title":{},"body":{"classes/ShapeHistory.html":{},"classes/ShapeHistoryDto.html":{},"injectables/UsersRepository.html":{}}}],["weight'})@prop({type",{"_index":648,"title":{},"body":{"classes/ShapeHistory.html":{}}}],["world",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":364,"title":{},"body":{"controllers/ExercisesController.html":{},"injectables/ExercisesService.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PlansModule.html":{},"modules/RoutinesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nExercisesModule\n\nExercisesModule\n\nAppModule -->\n\nExercisesModule->AppModule\n\n\n\n\n\nPlansModule\n\nPlansModule\n\nAppModule -->\n\nPlansModule->AppModule\n\n\n\n\n\nRoutinesModule\n\nRoutinesModule\n\nAppModule -->\n\nRoutinesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ExercisesModule\n                        \n                        \n                            PlansModule\n                        \n                        \n                            RoutinesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { RoutinesModule } from './routines/routines.module';\nimport { ExercisesModule } from './exercises/exercises.module';\nimport { UsersModule } from './users/users.module';\nimport { PlansModule } from './plans/plans.module';\nimport { AppController } from '../app.controller';\nimport { AppService } from '../app.service';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        const localConnection = configService.get('MONGO_LOCAL');\n        const atlasConnection = configService.get('MONGO_ATLAS');\n        const isLocal = process.env.ENVIRONMENT_LOCAL ?? false;\n        return {\n          uri: isLocal\n            ? `${localConnection}/${process.env.MONGO_DB}`\n            : `${atlasConnection}/${process.env.MONGO_DB}`,\n        };\n      },\n      inject: [ConfigService],\n    }),\n    AuthModule,\n    UsersModule,\n    ExercisesModule,\n    PlansModule,\n    RoutinesModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/auth.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/auth.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type AuthDocument = Auth & Document;\n\n@Schema({ collection: 'auth', timestamps: true })\nexport class Auth {\n  @Prop({ type: String, required: true })\n  email: string;\n\n  @Prop({ type: String, required: true })\n  token: string;\n}\n\nexport const AuthSchema = SchemaFactory.createForClass(Auth);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(doc: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: OK_200, type: UserDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Inject, Post } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiInternalServerErrorResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport {\n  AUTH_SERVICE,\n  IAuthService,\n} from './interfaces/auth.service.interface';\nimport { IAuthController } from './interfaces/auth.controller.interface';\nimport {\n  UNAUTHORIZED_401,\n  BAD_REQUEST_400,\n  NOT_FOUND_404,\n  SERVER_ERROR_500,\n  OK_200,\n} from '../shared/utils/http-response-status.utils';\nimport { UserDto } from '../users/dtos/dtos';\nimport { LoginDto } from './dtos/dtos';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController implements IAuthController {\n  constructor(\n    @Inject(AUTH_SERVICE)\n    private readonly service: IAuthService\n  ) {}\n\n  @Post()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: OK_200, type: UserDto })\n  async login(@Body() doc: LoginDto): Promise {\n    const { email, password } = doc;\n    return await this.service.login(email, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class AuthDto {\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport * as dotenv from 'dotenv';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { AUTH_SERVICE } from './interfaces/auth.service.interface';\nimport { AuthRepository } from './auth.repository';\nimport { AUTH_REPOSITORY } from './interfaces/auth.repository.interface';\nimport { Auth, AuthSchema } from './auth.model';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { USERS_SERVICE } from '../users/interfaces/users.service.interface';\nimport { UsersService } from '../users/users.service';\nimport { JwtStrategy } from './strategy/jwt.strategy';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Auth.name,\n        schema: AuthSchema,\n      },\n    ]),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: '7d' },\n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n  ],\n  controllers: [AuthController],\n  providers: [\n    { useClass: AuthService, provide: AUTH_SERVICE },\n    { useClass: AuthRepository, provide: AUTH_REPOSITORY },\n    { useClass: UsersService, provide: USERS_SERVICE },\n    JwtStrategy,\n  ],\n})\nexport class AuthModule {\n  constructor() {\n    dotenv.config();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthRepository.html":{"url":"injectables/AuthRepository.html","title":"injectable - AuthRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(auth: Auth)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth\n                                    \n                                                Auth\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Auth, AuthDocument } from './auth.model';\nimport { IAuthRepository } from './interfaces/auth.repository.interface';\n\n@Injectable()\nexport class AuthRepository implements IAuthRepository {\n  constructor(\n    @InjectModel(Auth.name)\n    readonly model: Model\n  ) {}\n\n  async create(auth: Auth): Promise {\n    return await this.model.create(auth);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IAuthRepository, usersService: IUsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IAuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        IUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken(user: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyToken\n                        \n                    \n                \n            \n            \n                \nverifyToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('AuthService')\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  Logger,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {\n  IUsersService,\n  USERS_SERVICE,\n} from '../users/interfaces/users.service.interface';\nimport { comparePasswords } from './utils/credentials.utils';\nimport { UserDto } from '../users/dtos/user.dto';\nimport {\n  AUTH_REPOSITORY,\n  IAuthRepository,\n} from './interfaces/auth.repository.interface';\nimport { AuthDto } from './dtos/dtos';\nimport { IAuthService } from './interfaces/auth.service.interface';\n\n@Injectable()\nexport class AuthService implements IAuthService {\n  private readonly logger = new Logger('AuthService');\n\n  constructor(\n    @Inject(AUTH_REPOSITORY)\n    private readonly repository: IAuthRepository,\n    @Inject(USERS_SERVICE)\n    private readonly usersService: IUsersService,\n    private jwtService: JwtService\n  ) {}\n\n  generateToken(user: UserDto): string {\n    const payload = { sub: user.id, email: user.email };\n    return this.jwtService.sign(payload);\n  }\n\n  verifyToken(token: string): any {\n    return this.jwtService.verify(token);\n  }\n\n  async login(email: string, password: string): Promise {\n    try {\n      const user = await this.usersService.getByEmail(email);\n\n      if (!user) {\n        throw new UnauthorizedException(`User email ${email}`);\n      }\n\n      const isPasswordValid = await comparePasswords(password, user.password);\n\n      if (!isPasswordValid) {\n        throw new UnauthorizedException(\n          `Password is incorrect to user ${user.email}`\n        );\n      }\n\n      const token = this.generateToken(user);\n\n      const doc: AuthDto = {\n        email: user.email,\n        token: token,\n      };\n\n      await this.repository.create(doc);\n\n      return token;\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExerciseDto.html":{"url":"classes/CreateExerciseDto.html","title":"class - CreateExerciseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExerciseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/exercises/dtos/create-exercises.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                focusMuscle\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        focusMuscle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/create-exercises.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/create-exercises.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsDefined()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/create-exercises.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/create-exercises.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/create-exercises.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayNotEmpty,\n  IsArray,\n  IsDefined,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from 'class-validator';\n\nexport class CreateExerciseDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @IsDefined()\n  name: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsArray()\n  @ArrayNotEmpty()\n  focusMuscle: string[];\n\n  @ApiProperty()\n  @IsString()\n  @IsUrl()\n  @IsOptional()\n  image?: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsUrl()\n  @IsOptional()\n  video?: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlanDto.html":{"url":"classes/CreatePlanDto.html","title":"class - CreatePlanDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlanDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/dtos/create-plan.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                focusMuscle\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                training\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        focusMuscle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dtos/create-plan.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dtos/create-plan.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        training\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Training[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dtos/create-plan.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dtos/create-plan.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsDefined,\n  IsNotEmpty,\n  IsString,\n  IsArray,\n  ArrayNotEmpty,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Training } from 'src/modules/shared/models/training.model';\n\nexport class CreatePlanDto {\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsArray()\n  @ArrayNotEmpty()\n  focusMuscle: string[];\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  userId: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsOptional()\n  training?: Training[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                shape\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-user.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDate()@IsNotEmpty()@IsDefined()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsString()@IsNotEmpty()@IsDefined()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsDefined()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsDefined()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsDefined()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        shape\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShapeHistoryDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/create-user.dto.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayNotEmpty,\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDefined,\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\nimport { ShapeHistoryDto } from './shape-history.dto';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  @IsString()\n  @IsNotEmpty()\n  @IsDefined()\n  email: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @IsDefined()\n  password: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @IsDefined()\n  firstName: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @IsDefined()\n  lastName: string;\n\n  @ApiProperty()\n  @IsDate()\n  @IsNotEmpty()\n  @IsDefined()\n  birthDate: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsBoolean()\n  active: boolean;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsArray()\n  @ArrayNotEmpty()\n  shape: ShapeHistoryDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exercise.html":{"url":"classes/Exercise.html","title":"class - Exercise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exercise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/exercises/exercise.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                focusMuscle\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        focusMuscle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Focus Muscle of Exercise', type: undefined})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/exercise.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Exercise Id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/exercise.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'External URL for Exercise Image'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/exercise.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Exercise Name'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/exercise.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Info notes to exercise'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/exercise.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'External URL for Exercise Video'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/exercise.model.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport type ExerciseDocument = Exercise & Document;\n\n@Schema({ collection: 'exercises', timestamps: true })\nexport class Exercise {\n  @ApiProperty({ description: 'Exercise Id' })\n  id: string;\n\n  @ApiProperty({ description: 'Exercise Name' })\n  @Prop({ type: String, required: true })\n  name: string;\n\n  @ApiProperty({ description: 'Focus Muscle of Exercise', type: [String] })\n  @Prop({ type: [String], required: true })\n  focusMuscle: string[];\n\n  @ApiProperty({ description: 'External URL for Exercise Image' })\n  @Prop({ type: String, required: false })\n  image?: string;\n\n  @ApiProperty({ description: 'External URL for Exercise Video' })\n  @Prop({ type: String, required: false })\n  video?: string;\n\n  @ApiProperty({ description: 'Info notes to exercise' })\n  @Prop({ type: String, required: false })\n  notes?: string;\n}\n\nexport const ExerciseSchema = SchemaFactory.createForClass(Exercise);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExerciseDto.html":{"url":"classes/ExerciseDto.html","title":"class - ExerciseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExerciseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/exercises/dtos/exercise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                focusMuscle\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        focusMuscle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/exercise.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/exercise.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/exercise.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsDefined()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/exercise.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/exercise.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/dtos/exercise.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayNotEmpty,\n  IsArray,\n  IsDefined,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n} from 'class-validator';\n\nexport class ExerciseDto {\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  id: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @IsDefined()\n  name: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsArray()\n  @ArrayNotEmpty()\n  focusMuscle: string[];\n\n  @ApiProperty()\n  @IsString()\n  @IsUrl()\n  @IsOptional()\n  image?: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsUrl()\n  @IsOptional()\n  video?: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsOptional()\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExercisesController.html":{"url":"controllers/ExercisesController.html","title":"controller - ExercisesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExercisesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/exercises/exercises.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                exercises\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findByParams\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(exercise: CreateExerciseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: CREATED_201, type: undefined})@ApiBody({type: CreateExerciseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/exercises/exercises.controller.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exercise\n                                    \n                                                CreateExerciseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        findByParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByParams(params?: ParamsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search')@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: OK_200, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/exercises/exercises.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ParamsDto\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: OK_200, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/exercises/exercises.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: OK_200, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/exercises/exercises.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, exercise: ExerciseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/update')@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiOkResponse({description: OK_200})\n                \n            \n\n            \n                \n                    Defined in src/modules/exercises/exercises.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exercise\n                                    \n                                                ExerciseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Inject,\n  Get,\n  UseGuards,\n  Param,\n  NotFoundException,\n  Body,\n  Post,\n  Patch,\n  Query,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiBody,\n  ApiInternalServerErrorResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  EXERCISES_SERVICE,\n  IExercisesService,\n} from './interfaces/exercises.service.interface';\nimport { IExercisesController } from './interfaces/exercises.controller.interface';\nimport {\n  BAD_REQUEST_400,\n  CREATED_201,\n  NOT_FOUND_404,\n  OK_200,\n  SERVER_ERROR_500,\n  UNAUTHORIZED_401,\n} from '../shared/utils/http-response-status.utils';\nimport { Exercise } from './exercise.model';\nimport { ExerciseDto, CreateExerciseDto } from './dtos/dtos';\nimport { ParamsDto } from '../shared/dtos/params.dto';\n\n@Controller('exercises')\n@ApiTags('exercises')\nexport class ExercisesController implements IExercisesController {\n  constructor(\n    @Inject(EXERCISES_SERVICE)\n    private readonly service: IExercisesService\n  ) {}\n\n  @Get()\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: OK_200, type: [Exercise] })\n  async getAll(): Promise {\n    return await this.service.getAll();\n  }\n\n  @Get('search')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: OK_200, type: [ExerciseDto] })\n  async findByParams(@Query() params?: ParamsDto): Promise {\n    const exercise = await this.service.findByParams(params);\n    if (!exercise || exercise.length === 0) {\n      throw new NotFoundException(`Exercise name ${params} not found`);\n    }\n    return exercise;\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: OK_200, type: [ExerciseDto] })\n  async getById(@Param('id') id: string): Promise {\n    const exercise = await this.service.getById(id);\n    if (!exercise) {\n      throw new NotFoundException(`Id ${id} not found`);\n    }\n    return exercise;\n  }\n\n  @Post()\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: CREATED_201, type: [ExerciseDto] })\n  @ApiBody({ type: CreateExerciseDto })\n  async create(@Body() exercise: CreateExerciseDto): Promise {\n    return await this.service.create(exercise);\n  }\n\n  @Patch(':id/update')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiOkResponse({ description: OK_200 })\n  async update(\n    @Param('id') id: string,\n    @Body() exercise: ExerciseDto\n  ): Promise {\n    return await this.service.update(id, exercise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExercisesModule.html":{"url":"modules/ExercisesModule.html","title":"module - ExercisesModule","body":"\n                   \n\n\n\n\n    Modules\n    ExercisesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/exercises/exercises.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ExercisesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExercisesService } from './exercises.service';\nimport { ExercisesController } from './exercises.controller';\nimport { Exercise, ExerciseSchema } from './exercise.model';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { EXERCISES_SERVICE } from './interfaces/exercises.service.interface';\nimport { EXERCISES_REPOSITORY } from './interfaces/exercises.repository.interface';\nimport { ExercisesRepository } from './exercises.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Exercise.name,\n        schema: ExerciseSchema,\n      },\n    ]),\n  ],\n  controllers: [ExercisesController],\n  providers: [\n    { useClass: ExercisesService, provide: EXERCISES_SERVICE },\n    { useClass: ExercisesRepository, provide: EXERCISES_REPOSITORY },\n  ],\n  exports: [EXERCISES_SERVICE, EXERCISES_REPOSITORY],\n})\nexport class ExercisesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExercisesRepository.html":{"url":"injectables/ExercisesRepository.html","title":"injectable - ExercisesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExercisesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/exercises/exercises.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByParams\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/exercises/exercises.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(exercise: CreateExerciseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.repository.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exercise\n                                    \n                                                CreateExerciseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByParams(params: ParamsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.repository.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ParamsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.repository.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, exercise: ExerciseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exercise\n                                    \n                                                ExerciseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IExercisesRepository } from './interfaces/exercises.repository.interface';\nimport { Exercise, ExerciseDocument } from './exercise.model';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CreateExerciseDto, ExerciseDto } from './dtos/dtos';\nimport { ParamsDto } from '../shared/dtos/params.dto';\n\n@Injectable()\nexport class ExercisesRepository implements IExercisesRepository {\n  constructor(\n    @InjectModel(Exercise.name)\n    readonly model: Model\n  ) {}\n\n  async create(exercise: CreateExerciseDto): Promise {\n    return await this.model.create(exercise);\n  }\n\n  async getAll(): Promise {\n    return await this.model.find();\n  }\n\n  async getById(id: string): Promise {\n    return await this.model.findById(id);\n  }\n\n  async findByParams(params: ParamsDto): Promise {\n    return await this.model.find(params);\n  }\n\n  async update(id: string, exercise: ExerciseDto): Promise {\n    await this.model.updateOne({ _id: id }, exercise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExercisesService.html":{"url":"injectables/ExercisesService.html","title":"injectable - ExercisesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExercisesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/exercises/exercises.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByParams\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IExercisesRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/exercises/exercises.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IExercisesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(exercise: CreateExerciseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exercise\n                                    \n                                                CreateExerciseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByParams(params?: ParamsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ParamsDto\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, exercise: ExerciseDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/exercises/exercises.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exercise\n                                    \n                                                ExerciseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('exercises')\n                    \n                \n                    \n                        \n                                Defined in src/modules/exercises/exercises.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport {\n  EXERCISES_REPOSITORY,\n  IExercisesRepository,\n} from './interfaces/exercises.repository.interface';\nimport { CreateExerciseDto, ExerciseDto } from './dtos/dtos';\nimport { mapExercise } from './utils/exercise.mapper';\nimport { IExercisesService } from './interfaces/exercises.service.interface';\nimport { validate } from 'class-validator';\nimport { ParamsDto } from '../shared/dtos/params.dto';\nimport { buildParams } from '../shared/utils/build-params.utils';\n\n@Injectable()\nexport class ExercisesService implements IExercisesService {\n  private readonly logger = new Logger('exercises');\n\n  constructor(\n    @Inject(EXERCISES_REPOSITORY)\n    private readonly repository: IExercisesRepository\n  ) {}\n\n  async getAll(): Promise {\n    try {\n      return await this.repository.getAll();\n    } catch (error) {\n      this.logger.error(error);\n    }\n  }\n\n  async findByParams(params?: ParamsDto): Promise {\n    try {\n      const parameters = buildParams(params);\n      let exercises = await this.repository.findByParams(parameters);\n      if (exercises && exercises.length > 0) {\n        return exercises.map((exe) => mapExercise(exe));\n      } else {\n        return (exercises = []);\n      }\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(`Invalid exercise params`);\n    }\n  }\n\n  async getById(id: string): Promise {\n    try {\n      const exercise = await this.repository.getById(id);\n      if (exercise != null || exercise != undefined) {\n        return mapExercise(exercise);\n      } else {\n        throw new NotFoundException(`Id ${id} not found`);\n      }\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(`Invalid id ${id}`);\n    }\n  }\n\n  async create(exercise: CreateExerciseDto): Promise {\n    try {\n      const errors = await validate(exercise);\n      if (errors.length > 0) {\n        throw new BadRequestException(errors);\n      }\n      return await this.repository.create(exercise);\n    } catch (error) {\n      if (error instanceof Error) {\n        this.logger.error(error);\n        throw new BadRequestException(error.message);\n      }\n    }\n  }\n\n  async update(id: string, exercise: ExerciseDto): Promise {\n    try {\n      const result = await this.repository.getById(id);\n      if (result !== undefined) {\n        return await this.repository.update(id, exercise);\n      } else {\n        throw new NotFoundException(`Exercise id ${id} not found`);\n      }\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(`Update exercise id ${id} failed`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthController.html":{"url":"interfaces/IAuthController.html","title":"interface - IAuthController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/auth.controller.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            login\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LoginDto } from '../dtos/dtos';\n\nexport const AUTH_CONTROLLER = 'AUTH_CONTROLLER';\n\nexport interface IAuthController {\n  login: (doc: LoginDto) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthRepository.html":{"url":"interfaces/IAuthRepository.html","title":"interface - IAuthRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/auth.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Auth } from '../auth.model';\n\nexport const AUTH_REPOSITORY = 'AUTH_REPOSITORY';\n\nexport interface IAuthRepository {\n  create: (auth: Auth) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthService.html":{"url":"interfaces/IAuthService.html","title":"interface - IAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/auth.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            generateToken\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            verifyToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        generateToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generateToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verifyToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verifyToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserDto } from 'src/modules/users/dtos/dtos';\n\nexport const AUTH_SERVICE = 'AUTH_SERVICE';\n\nexport interface IAuthService {\n  login: (email: string, password: string) => Promise;\n  generateToken: (user: UserDto) => string;\n  verifyToken: (token: string) => any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDefaultController.html":{"url":"interfaces/IDefaultController.html","title":"interface - IDefaultController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDefaultController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/interfaces/default.controller.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            delete\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                                \n                                        \n                                            getByField\n                                        \n                                \n                                \n                                        \n                                            update\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getByField\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getByField:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDefaultController {\n  create: (doc: T) => Promise;\n  getAll: () => Promise;\n  getByField: (field: any) => Promise;\n  update: (id: string, doc: T) => Promise;\n  delete: (id: string) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExercisesController.html":{"url":"interfaces/IExercisesController.html","title":"interface - IExercisesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExercisesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/exercises/interfaces/exercises.controller.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            findByParams\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                                \n                                        \n                                            getById\n                                        \n                                \n                                \n                                        \n                                            update\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findByParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        findByParams:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getById:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ParamsDto } from 'src/modules/shared/dtos/params.dto';\nimport { CreateExerciseDto, ExerciseDto } from '../dtos/dtos';\nimport { Exercise } from '../exercise.model';\n\nexport const EXERCISES_CONTROLLER = 'EXERCISES_CONTROLLER';\n\nexport interface IExercisesController {\n  getAll: () => Promise;\n  getById: (id: string) => Promise;\n  findByParams: (params?: ParamsDto) => Promise;\n  create: (exercise: CreateExerciseDto) => Promise;\n  update: (id: string, exercise: ExerciseDto) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExercisesRepository.html":{"url":"interfaces/IExercisesRepository.html","title":"interface - IExercisesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExercisesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/exercises/interfaces/exercises.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            findByParams\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                                \n                                        \n                                            getById\n                                        \n                                \n                                \n                                        \n                                            update\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findByParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        findByParams:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getById:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ParamsDto } from 'src/modules/shared/dtos/params.dto';\nimport { CreateExerciseDto, ExerciseDto } from '../dtos/dtos';\n\nexport const EXERCISES_REPOSITORY = 'EXERCISES_REPOSITORY';\n\nexport interface IExercisesRepository {\n  create: (exercise: CreateExerciseDto) => Promise;\n  getAll: () => Promise;\n  getById: (id: string) => Promise;\n  findByParams: (params: ParamsDto) => Promise;\n  update: (id: string, exercise: ExerciseDto) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExercisesService.html":{"url":"interfaces/IExercisesService.html","title":"interface - IExercisesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExercisesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/exercises/interfaces/exercises.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            findByParams\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                                \n                                        \n                                            getById\n                                        \n                                \n                                \n                                        \n                                            update\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findByParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        findByParams:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getById:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ParamsDto } from 'src/modules/shared/dtos/params.dto';\nimport { CreateExerciseDto, ExerciseDto } from '../dtos/dtos';\n\nexport const EXERCISES_SERVICE = 'EXERCISES_SERVICE';\n\nexport interface IExercisesService {\n  getAll: () => Promise;\n  getById: (id: string) => Promise;\n  findByParams: (params: ParamsDto) => Promise;\n  create: (exercise: CreateExerciseDto) => Promise;\n  update: (id: string, exercise: ExerciseDto) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlansRepository.html":{"url":"interfaces/IPlansRepository.html","title":"interface - IPlansRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPlansRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/interfaces/plans.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreatePlanDto } from '../dtos/create-plan.dto';\nimport { PlanDto } from '../dtos/dtos';\n\nexport const PLANS_REPOSITORY = 'PLANS_REPOSITORY';\n\nexport interface IPlansRepository {\n  getAll: () => Promise;\n  create: (plan: CreatePlanDto) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlansService.html":{"url":"interfaces/IPlansService.html","title":"interface - IPlansService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPlansService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/interfaces/plans.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreatePlanDto } from '../dtos/create-plan.dto';\nimport { PlanDto } from '../dtos/dtos';\n\nexport const PLANS_SERVICE = 'PLANS_SERVICE';\n\nexport interface IPlansService {\n  getAll: () => Promise;\n  create: (plan: CreatePlanDto) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUsersController.html":{"url":"interfaces/IUsersController.html","title":"interface - IUsersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/interfaces/users.controller.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            disable\n                                        \n                                \n                                \n                                        \n                                            enable\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                                \n                                        \n                                            getByEmail\n                                        \n                                \n                                \n                                        \n                                            update\n                                        \n                                \n                                \n                                        \n                                            updateShape\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disable:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enable:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getByEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getByEmail:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateShape\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateShape:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreateUserDto, ShapeHistoryDto, UserDto } from '../dtos/dtos';\nimport { User } from '../user.model';\n\nexport const USERS_CONTROLLER = 'USERS_CONTROLLER';\n\nexport interface IUsersController {\n  create: (user: CreateUserDto) => Promise;\n  getAll: () => Promise;\n  getByEmail: (email: string) => Promise;\n  update: (id: string, user: UserDto) => Promise;\n  updateShape: (id: string, shape: ShapeHistoryDto) => Promise;\n  enable: (id: string) => Promise;\n  disable: (id: string) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUsersRepository.html":{"url":"interfaces/IUsersRepository.html","title":"interface - IUsersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUsersRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/interfaces/users.repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            delete\n                                        \n                                \n                                \n                                        \n                                            disable\n                                        \n                                \n                                \n                                        \n                                            enable\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                                \n                                        \n                                            getByEmail\n                                        \n                                \n                                \n                                        \n                                            getById\n                                        \n                                \n                                \n                                        \n                                            update\n                                        \n                                \n                                \n                                        \n                                            updateShape\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disable:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enable:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getByEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getByEmail:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getById:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateShape\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateShape:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreateUserDto, ShapeHistoryDto, UserDto } from '../dtos/dtos';\n\nexport const USERS_REPOSITORY = 'USERS_REPOSITORY';\n\nexport interface IUsersRepository {\n  create: (user: CreateUserDto) => Promise;\n  getAll: () => Promise;\n  getById: (id: string) => Promise;\n  getByEmail: (email: string) => Promise;\n  update: (id: string, user: UserDto) => Promise;\n  updateShape: (id: string, shape: ShapeHistoryDto) => Promise;\n  delete: (id: string) => Promise;\n  enable: (id: string) => Promise;\n  disable: (id: string) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUsersService.html":{"url":"interfaces/IUsersService.html","title":"interface - IUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/interfaces/users.service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            delete\n                                        \n                                \n                                \n                                        \n                                            disable\n                                        \n                                \n                                \n                                        \n                                            enable\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                                \n                                        \n                                            getByEmail\n                                        \n                                \n                                \n                                        \n                                            getById\n                                        \n                                \n                                \n                                        \n                                            update\n                                        \n                                \n                                \n                                        \n                                            updateShape\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disable:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enable:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getByEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getByEmail:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getById:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateShape\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateShape:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreateUserDto, ShapeHistoryDto, UserDto } from '../dtos/dtos';\n\nexport const USERS_SERVICE = 'USERS_SERVICE';\n\nexport interface IUsersService {\n  create: (user: CreateUserDto) => Promise;\n  getAll: () => Promise;\n  getByEmail: (email: string) => Promise;\n  getById: (id: string) => Promise;\n  update: (id: string, user: UserDto) => Promise;\n  updateShape: (id: string, shape: ShapeHistoryDto) => Promise;\n  delete: (id: string) => Promise;\n  enable: (id: string) => Promise;\n  disable: (id: string) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/jwt-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: IUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategy/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        IUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategy/jwt.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { JwtPayload } from '../interfaces/jwt-payload.interface';\nimport {\n  IUsersService,\n  USERS_SERVICE,\n} from 'src/modules/users/interfaces/users.service.interface';\nimport { UserDto } from 'src/modules/users/dtos/user.dto';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    @Inject(USERS_SERVICE)\n    private readonly usersService: IUsersService\n  ) {\n    super({\n      secretOrKey: process.env.JWT_SECRET,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n    });\n  }\n  async validate(payload: JwtPayload): Promise {\n    const { email } = payload;\n    const user = await this.usersService.getByEmail(email);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/login.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParamsDto.html":{"url":"classes/ParamsDto.html","title":"class - ParamsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParamsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/dtos/params.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                focusMuscle\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        focusMuscle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/dtos/params.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/dtos/params.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ParamsDto {\n  name?: string;\n  focusMuscle?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Plan.html":{"url":"classes/Plan.html","title":"class - Plan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/plan.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                focusMuscle\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                training\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        focusMuscle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Focus Muscle of Plan', type: undefined})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/plan.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Plan Id}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/plan.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Plan Name'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/plan.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        training\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Training[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Existing Exercises in the Plan', type: undefined})@Prop({type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/plan.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User Id who created the plan'})@Prop({type: undefined, required: true, ref: 'Users'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/plan.model.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Training, TrainingSchema } from '../shared/models/training.model';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport type PlanDocument = Plan & Document;\n\n@Schema({ collection: 'plans', timestamps: true })\nexport class Plan {\n  @ApiProperty({ description: 'Plan Id}' })\n  id: string;\n\n  @ApiProperty({ description: 'Plan Name' })\n  @Prop({ type: String, required: true })\n  name: string;\n\n  @ApiProperty({ description: 'Focus Muscle of Plan', type: [String] })\n  @Prop({ type: [String], required: true })\n  focusMuscle: string[];\n\n  @ApiProperty({ description: 'User Id who created the plan' })\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    required: true,\n    ref: 'Users',\n  })\n  userId: string;\n\n  @ApiProperty({\n    description: 'Existing Exercises in the Plan',\n    type: [Training],\n  })\n  @Prop({ type: [TrainingSchema], required: false })\n  training?: Training[];\n}\n\nexport const PlanSchema = SchemaFactory.createForClass(Plan);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlanDto.html":{"url":"classes/PlanDto.html","title":"class - PlanDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlanDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/dtos/plan.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                focusMuscle\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                training\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        focusMuscle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dtos/plan.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dtos/plan.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dtos/plan.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        training\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Training[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dtos/plan.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/dtos/plan.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayNotEmpty,\n  IsArray,\n  IsBoolean,\n  IsDefined,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { Training } from 'src/modules/shared/models/training.model';\n\nexport class PlanDto {\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  id: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsArray()\n  @ArrayNotEmpty()\n  focusMuscle: string[];\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  userId: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsOptional()\n  training?: Training[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlansController.html":{"url":"controllers/PlansController.html","title":"controller - PlansController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlansController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/plans.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                plans\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(plan: CreatePlanDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: CREATED_201, type: undefined})@ApiBody({type: CreatePlanDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/plans/plans.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plan\n                                    \n                                                CreatePlanDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: OK_200, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/plans/plans.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Inject, Post, UseGuards } from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiBody,\n  ApiInternalServerErrorResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport {\n  IPlansService,\n  PLANS_SERVICE,\n} from './interfaces/plans.service.interface';\nimport { Plan } from './plan.model';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  UNAUTHORIZED_401,\n  BAD_REQUEST_400,\n  NOT_FOUND_404,\n  SERVER_ERROR_500,\n  OK_200,\n  CREATED_201,\n} from '../shared/utils/http-response-status.utils';\nimport { CreatePlanDto } from './dtos/create-plan.dto';\nimport { PlanDto } from './dtos/plan.dto';\n\n@Controller('plans')\n@ApiTags('plans')\nexport class PlansController {\n  constructor(\n    @Inject(PLANS_SERVICE)\n    private readonly service: IPlansService\n  ) {}\n\n  @Get()\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: OK_200, type: [Plan] })\n  async getAll(): Promise {\n    return await this.service.getAll();\n  }\n\n  @Post()\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: CREATED_201, type: [PlanDto] })\n  @ApiBody({ type: CreatePlanDto })\n  async create(@Body() plan: CreatePlanDto): Promise {\n    return await this.service.create(plan);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlansModule.html":{"url":"modules/PlansModule.html","title":"module - PlansModule","body":"\n                   \n\n\n\n\n    Modules\n    PlansModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlansModule\n\n\n\ncluster_PlansModule_imports\n\n\n\n\nExercisesModule\n\nExercisesModule\n\n\n\nPlansModule\n\nPlansModule\n\nPlansModule -->\n\nExercisesModule->PlansModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/plans/plans.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            PlansController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ExercisesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Plan, PlanSchema } from './plan.model';\nimport { PlansController } from './plans.controller';\nimport { PlansService } from './plans.service';\nimport { PlansRepository } from './plans.repository';\nimport { PLANS_SERVICE } from './interfaces/plans.service.interface';\nimport { PLANS_REPOSITORY } from './interfaces/plans.repository.interface';\nimport { ExercisesModule } from '../exercises/exercises.module';\nimport { ExercisesService } from '../exercises/exercises.service';\nimport { EXERCISES_SERVICE } from '../exercises/interfaces/exercises.service.interface';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Plan.name,\n        schema: PlanSchema,\n      },\n    ]),\n    ExercisesModule,\n  ],\n  controllers: [PlansController],\n  providers: [\n    { useClass: PlansService, provide: PLANS_SERVICE },\n    { useClass: PlansRepository, provide: PLANS_REPOSITORY },\n    { useClass: ExercisesService, provide: EXERCISES_SERVICE },\n  ],\n})\nexport class PlansModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlansRepository.html":{"url":"injectables/PlansRepository.html","title":"injectable - PlansRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlansRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/plans.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/plans/plans.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(plan: CreatePlanDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/plans/plans.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plan\n                                    \n                                                CreatePlanDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/plans/plans.repository.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { Plan, PlanDocument } from './plan.model';\nimport { Model } from 'mongoose';\nimport { PlanDto } from './dtos/dtos';\nimport { Injectable } from '@nestjs/common';\nimport { IPlansRepository } from './interfaces/plans.repository.interface';\nimport { CreatePlanDto } from './dtos/create-plan.dto';\n\n@Injectable()\nexport class PlansRepository implements IPlansRepository {\n  constructor(\n    @InjectModel(Plan.name)\n    readonly model: Model\n  ) {}\n\n  async getAll(): Promise {\n    return await this.model.find();\n  }\n\n  async create(plan: CreatePlanDto): Promise {\n    return await this.model.create(plan);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlansService.html":{"url":"injectables/PlansService.html","title":"injectable - PlansService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlansService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/plans/plans.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IPlansRepository, exercisesService: IExercisesService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/plans/plans.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IPlansRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exercisesService\n                                                  \n                                                        \n                                                                        IExercisesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(plan: CreatePlanDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/plans/plans.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plan\n                                    \n                                                CreatePlanDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/plans/plans.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('PlansService')\n                    \n                \n                    \n                        \n                                Defined in src/modules/plans/plans.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  Logger,\n} from '@nestjs/common';\nimport {\n  IPlansRepository,\n  PLANS_REPOSITORY,\n} from './interfaces/plans.repository.interface';\nimport { PlanDto } from './dtos/dtos';\nimport {\n  EXERCISES_SERVICE,\n  IExercisesService,\n} from '../exercises/interfaces/exercises.service.interface';\nimport { IPlansService } from './interfaces/plans.service.interface';\nimport { CreatePlanDto } from './dtos/create-plan.dto';\nimport { validate } from 'class-validator';\n\n@Injectable()\nexport class PlansService implements IPlansService {\n  private readonly logger = new Logger('PlansService');\n\n  constructor(\n    @Inject(PLANS_REPOSITORY)\n    private readonly repository: IPlansRepository,\n    @Inject(EXERCISES_SERVICE)\n    private readonly exercisesService: IExercisesService\n  ) {}\n\n  async getAll(): Promise {\n    try {\n      return await this.repository.getAll();\n    } catch (error) {\n      this.logger.error(error);\n    }\n  }\n\n  async create(plan: CreatePlanDto): Promise {\n    try {\n      const errors = await validate(plan);\n      if (errors.length > 0) {\n        throw new BadRequestException(errors);\n      }\n      return await this.repository.create(plan);\n    } catch (error) {\n      if (error instanceof Error) {\n        this.logger.error(error);\n        throw new BadRequestException(error.message);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Routine.html":{"url":"classes/Routine.html","title":"class - Routine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Routine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routines/routine.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                focusMuscle\n                            \n                            \n                                    \n                                frequency\n                            \n                            \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                training\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        focusMuscle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routines/routine.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        frequency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routines/routine.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/routines/routine.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routines/routine.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        training\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Training[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routines/routine.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, ref: 'Users'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routines/routine.model.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Training, TrainingSchema } from '../shared/models/training.model';\n\nexport type RoutineDocument = Routine & Document;\n\n@Schema({ collection: 'routines', timestamps: true })\nexport class Routine {\n  id: string;\n\n  @Prop({ type: String, required: true })\n  name: string;\n\n  @Prop({ type: [String], required: true })\n  focusMuscle: string[];\n\n  @Prop({ type: String, required: true })\n  frequency: string;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    required: true,\n    ref: 'Users',\n  })\n  userId: string;\n\n  @Prop({ type: [TrainingSchema], required: true })\n  training: Training[];\n}\n\nexport const RoutineSchema = SchemaFactory.createForClass(Routine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoutinesController.html":{"url":"controllers/RoutinesController.html","title":"controller - RoutinesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoutinesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routines/routines.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        /*\nhttps://docs.nestjs.com/controllers#controllers\n*/\n\nimport { Controller } from '@nestjs/common';\n\n@Controller()\nexport class RoutinesController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutinesModule.html":{"url":"modules/RoutinesModule.html","title":"module - RoutinesModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutinesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoutinesModule\n\n\n\ncluster_RoutinesModule_providers\n\n\n\n\nRoutinesService\n\nRoutinesService\n\n\n\nRoutinesModule\n\nRoutinesModule\n\nRoutinesModule -->\n\nRoutinesService->RoutinesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/routines/routines.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoutinesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoutinesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoutinesService } from './routines.service';\nimport { RoutinesController } from './routines.controller';\n\n@Module({\n  imports: [],\n  controllers: [RoutinesController],\n  providers: [RoutinesService],\n})\nexport class RoutinesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutinesRepository.html":{"url":"injectables/RoutinesRepository.html","title":"injectable - RoutinesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoutinesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routines/routines.repository.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class RoutinesRepository {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutinesService.html":{"url":"injectables/RoutinesService.html","title":"injectable - RoutinesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoutinesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routines/routines.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class RoutinesService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeHistory.html":{"url":"classes/ShapeHistory.html","title":"class - ShapeHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/shape-history.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                bmi\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User age'})@Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/shape-history.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bmi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'According to registered User data, BMI calculation'})@Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/shape-history.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User height'})@Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/shape-history.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User weight'})@Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/shape-history.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Document } from 'mongoose';\n\nexport type ShapeHistoryDocument = ShapeHistory & Document;\n\n@Schema({ _id: false, timestamps: true })\nexport class ShapeHistory {\n  @ApiProperty({ description: 'User age' })\n  @Prop({ type: Date, required: true })\n  age: Date;\n\n  @ApiProperty({ description: 'User height' })\n  @Prop({ type: Number, required: true })\n  height: number;\n\n  @ApiProperty({ description: 'User weight' })\n  @Prop({ type: Number, required: true })\n  weight: number;\n\n  @ApiProperty({\n    description: 'According to registered User data, BMI calculation',\n  })\n  @Prop({ type: Number, required: true })\n  bmi: number;\n}\n\nexport const ShapeHistorySchema = SchemaFactory.createForClass(ShapeHistory);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShapeHistoryDto.html":{"url":"classes/ShapeHistoryDto.html","title":"class - ShapeHistoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShapeHistoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/shape-history.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                bmi\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDate()@IsDefined()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/shape-history.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        bmi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsDefined()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/shape-history.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsDefined()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/shape-history.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsDefined()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/shape-history.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsDefined, IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class ShapeHistoryDto {\n  @ApiProperty()\n  @IsDate()\n  @IsDefined()\n  @IsNotEmpty()\n  age: Date;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsDefined()\n  @IsNotEmpty()\n  height: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsDefined()\n  @IsNotEmpty()\n  weight: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsDefined()\n  @IsNotEmpty()\n  bmi: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Training.html":{"url":"classes/Training.html","title":"class - Training","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Training\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/models/training.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                done\n                            \n                            \n                                    \n                                exerciseId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                load\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                    \n                                repetitions\n                            \n                            \n                                    \n                                    \n                                series\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Exercise Control Done'})@Prop({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/models/training.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        exerciseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, ref: 'Exercises'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/models/training.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Training Id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/models/training.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        load\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Exercise load/weight'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/models/training.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Exercise Id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/models/training.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Exercise Notes'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/models/training.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        repetitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Exercise Repetitions'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/models/training.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Exercise Series'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/models/training.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport mongoose from 'mongoose';\n\nexport type TrainingDocument = Training & Document;\n\n@Schema({ timestamps: true })\nexport class Training {\n  @ApiProperty({ description: 'Training Id' })\n  id: string;\n\n  @ApiProperty({ description: 'Exercise Id' })\n  name: string;\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    required: true,\n    ref: 'Exercises',\n  })\n  exerciseId: string;\n\n  @ApiProperty({ description: 'Exercise Series' })\n  @Prop({ type: String, required: true })\n  series: string;\n\n  @ApiProperty({ description: 'Exercise Repetitions' })\n  @Prop({ type: String, required: true })\n  repetitions: string;\n\n  @ApiProperty({ description: 'Exercise load/weight' })\n  @Prop({ type: String, required: true })\n  load: string;\n\n  @ApiProperty({ description: 'Exercise Notes' })\n  @Prop({ type: String, required: false })\n  notes?: string;\n\n  @ApiProperty({ description: 'Exercise Control Done' })\n  @Prop({ type: Boolean, required: false })\n  done?: boolean;\n}\n\nexport const TrainingSchema = SchemaFactory.createForClass(Training);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrainingDto.html":{"url":"classes/TrainingDto.html","title":"class - TrainingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrainingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/shared/dtos/training.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                done\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                exerciseId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                load\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                repetitions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                series\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/dtos/training.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        exerciseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/dtos/training.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/dtos/training.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        load\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/dtos/training.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/dtos/training.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        repetitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/dtos/training.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/shared/dtos/training.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsDefined,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nexport class TrainingDto {\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  id: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  exerciseId: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  series: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  repetitions: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  load: string;\n\n  @ApiProperty()\n  @IsOptional()\n  @IsString()\n  notes?: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsBoolean()\n  done: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                shape\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User activation status'})@Prop({type: Boolean, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User birth date'})@Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User email'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User first name'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User Id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User sur name'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User password'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shape\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShapeHistory[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User shape history data', type: undefined})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.model.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { ShapeHistory, ShapeHistorySchema } from './shape-history';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport type UserDocument = User & Document;\n\n@Schema({ collection: 'users', timestamps: true })\nexport class User {\n  @ApiProperty({ description: 'User Id' })\n  id: string;\n\n  @ApiProperty({ description: 'User email' })\n  @Prop({ type: String, required: true })\n  email: string;\n\n  @ApiProperty({ description: 'User password' })\n  @Prop({ type: String, required: true })\n  password: string;\n\n  @ApiProperty({ description: 'User first name' })\n  @Prop({ type: String, required: true })\n  firstName: string;\n\n  @ApiProperty({ description: 'User sur name' })\n  @Prop({ type: String, required: true })\n  lastName: string;\n\n  @ApiProperty({ description: 'User birth date' })\n  @Prop({ type: Date, required: true })\n  birthDate: Date;\n\n  @ApiProperty({ description: 'User activation status' })\n  @Prop({ type: Boolean, required: true })\n  active: boolean;\n\n  @ApiProperty({ description: 'User shape history data', type: [ShapeHistory] })\n  @Prop({ type: [ShapeHistorySchema], required: true })\n  shape: ShapeHistory[];\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                shape\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        shape\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShapeHistory[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDefined()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayNotEmpty,\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDefined,\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\nimport { ShapeHistory } from '../shape-history';\n\nexport class UserDto {\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  id: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsDate()\n  birthDate: Date;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @IsBoolean()\n  active: boolean;\n\n  @ApiProperty()\n  @IsDefined()\n  @IsArray()\n  @ArrayNotEmpty()\n  shape: ShapeHistory[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                disable\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                enable\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getByEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateShape\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: CREATED_201, type: undefined})@ApiBody({type: CreateUserDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        disable\n                        \n                    \n                \n            \n            \n                \n                    \n                    disable(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/disable')@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiOkResponse({description: OK_200, type: String})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        enable\n                        \n                    \n                \n            \n            \n                \n                    \n                    enable(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/enable')@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiOkResponse({description: OK_200, type: String})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: OK_200, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        getByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmail(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('email')@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: OK_200, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiInternalServerErrorResponse({description: SERVER_ERROR_500})@ApiOkResponse({description: OK_200, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, user: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/update')@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiOkResponse({description: OK_200})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        updateShape\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateShape(id: string, shape: ShapeHistoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/shape-update')@UseGuards(undefined)@ApiBearerAuth()@ApiUnauthorizedResponse({description: UNAUTHORIZED_401})@ApiBadRequestResponse({description: BAD_REQUEST_400})@ApiNotFoundResponse({description: NOT_FOUND_404})@ApiOkResponse({description: OK_200})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shape\n                                    \n                                                ShapeHistoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Inject,\n  NotFoundException,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiBody,\n  ApiInternalServerErrorResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  IUsersService,\n  USERS_SERVICE,\n} from './interfaces/users.service.interface';\nimport { IUsersController } from './interfaces/users.controller.interface';\nimport {\n  BAD_REQUEST_400,\n  CREATED_201,\n  NOT_FOUND_404,\n  OK_200,\n  SERVER_ERROR_500,\n  UNAUTHORIZED_401,\n} from '../shared/utils/http-response-status.utils';\nimport { User } from './user.model';\nimport { ShapeHistoryDto, UserDto, CreateUserDto } from './dtos/dtos';\n\n@Controller('users')\n@ApiTags('users')\nexport class UsersController implements IUsersController {\n  constructor(\n    @Inject(USERS_SERVICE)\n    private readonly service: IUsersService\n  ) {}\n\n  @Get()\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: OK_200, type: [User] })\n  async getAll(): Promise {\n    return await this.service.getAll();\n  }\n\n  @Post()\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: CREATED_201, type: [UserDto] })\n  @ApiBody({ type: CreateUserDto })\n  async create(@Body() user: CreateUserDto): Promise {\n    return await this.service.create(user);\n  }\n\n  @Get('email')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: OK_200, type: [UserDto] })\n  async getByEmail(@Query('email') email: string): Promise {\n    const user = await this.service.getByEmail(email);\n    if (!user) {\n      throw new NotFoundException(`Email ${email} not found`);\n    }\n    return user;\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiInternalServerErrorResponse({ description: SERVER_ERROR_500 })\n  @ApiOkResponse({ description: OK_200, type: [UserDto] })\n  async getById(@Param('id') id: string): Promise {\n    const user = await this.service.getById(id);\n    if (!user) {\n      throw new NotFoundException(`Id ${id} not found`);\n    }\n    return user;\n  }\n\n  @Patch(':id/update')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiOkResponse({ description: OK_200 })\n  async update(@Param('id') id: string, @Body() user: UserDto): Promise {\n    return await this.service.update(id, user);\n  }\n\n  @Patch(':id/shape-update')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiOkResponse({ description: OK_200 })\n  async updateShape(\n    @Param('id') id: string,\n    @Body() shape: ShapeHistoryDto\n  ): Promise {\n    return await this.service.updateShape(id, shape);\n  }\n\n  @Patch(':id/enable')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiOkResponse({ description: OK_200, type: String })\n  async enable(@Param('id') id: string): Promise {\n    return await this.service.enable(id);\n  }\n\n  @Patch(':id/disable')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse({ description: UNAUTHORIZED_401 })\n  @ApiBadRequestResponse({ description: BAD_REQUEST_400 })\n  @ApiNotFoundResponse({ description: NOT_FOUND_404 })\n  @ApiOkResponse({ description: OK_200, type: String })\n  async disable(@Param('id') id: string): Promise {\n    return await this.service.disable(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { User, UserSchema } from './user.model';\nimport { USERS_SERVICE } from './interfaces/users.service.interface';\nimport { USERS_REPOSITORY } from './interfaces/users.repository.interface';\nimport { UsersRepository } from './users.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: User.name,\n        schema: UserSchema,\n      },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [\n    { useClass: UsersService, provide: USERS_SERVICE },\n    { useClass: UsersRepository, provide: USERS_REPOSITORY },\n  ],\n  exports: [USERS_SERVICE, USERS_REPOSITORY],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersRepository.html":{"url":"injectables/UsersRepository.html","title":"injectable - UsersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                disable\n                            \n                            \n                                    Async\n                                enable\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getByEmail\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateShape\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.repository.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        disable\n                        \n                    \n                \n            \n            \n                \n                    \n                    disable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.repository.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enable\n                        \n                    \n                \n            \n            \n                \n                    \n                    enable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.repository.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.repository.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, user: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateShape\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateShape(id: string, shape: ShapeHistoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.repository.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shape\n                                    \n                                                ShapeHistoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User, UserDocument } from './user.model';\nimport { CreateUserDto, ShapeHistoryDto, UserDto } from './dtos/dtos';\nimport { IUsersRepository } from './interfaces/users.repository.interface';\n\n@Injectable()\nexport class UsersRepository implements IUsersRepository {\n  constructor(\n    @InjectModel(User.name)\n    readonly model: Model\n  ) {}\n\n  async create(user: CreateUserDto): Promise {\n    return await this.model.create(user);\n  }\n\n  async getAll(): Promise {\n    return await this.model.find();\n  }\n\n  async getById(id: string): Promise {\n    return await this.model.findById(id);\n  }\n\n  async getByEmail(email: string): Promise {\n    const result = await this.model.findOne({ email: email });\n    return result ? result : null;\n  }\n\n  async update(id: string, user: UserDto): Promise {\n    await this.model.updateOne({ _id: id }, user);\n  }\n\n  async updateShape(id: string, shape: ShapeHistoryDto): Promise {\n    await this.model.updateOne(\n      { _id: id },\n      {\n        $push: {\n          shape: {\n            age: shape.age,\n            height: shape.height,\n            weight: shape.weight,\n            bmi: shape.bmi,\n          },\n        },\n      }\n    );\n  }\n\n  async delete(id: string): Promise {\n    await this.model.deleteOne({ _id: id });\n  }\n\n  async enable(id: string): Promise {\n    await this.model.updateOne({ _id: id }, { active: true });\n  }\n\n  async disable(id: string): Promise {\n    await this.model.updateOne({ _id: id }, { active: false });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                disable\n                            \n                            \n                                    Async\n                                enable\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getByEmail\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                hashedPassword\n                            \n                            \n                                transformString\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateShape\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IUsersRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IUsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        disable\n                        \n                    \n                \n            \n            \n                \n                    \n                    disable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enable\n                        \n                    \n                \n            \n            \n                \n                    \n                    enable(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hashedPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashedPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformString\n                        \n                    \n                \n            \n            \n                \ntransformString(arr: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, user: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateShape\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateShape(id: string, shape: ShapeHistoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shape\n                                    \n                                                ShapeHistoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('UsersService')\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcryptjs';\nimport {\n  IUsersRepository,\n  USERS_REPOSITORY,\n} from './interfaces/users.repository.interface';\nimport { CreateUserDto, ShapeHistoryDto, UserDto } from './dtos/dtos';\nimport { isEmail, validate } from 'class-validator';\nimport { IUsersService } from './interfaces/users.service.interface';\nimport { mapUser } from './utils/user.mapper';\n\n@Injectable()\nexport class UsersService implements IUsersService {\n  private readonly logger = new Logger('UsersService');\n\n  constructor(\n    @Inject(USERS_REPOSITORY)\n    private readonly repository: IUsersRepository\n  ) {}\n\n  async getAll(): Promise {\n    try {\n      return await this.repository.getAll();\n    } catch (error) {\n      this.logger.error(error);\n    }\n  }\n\n  async getById(id: string): Promise {\n    try {\n      const user = await this.repository.getById(id);\n      if (user != null || user != undefined) {\n        return mapUser(user);\n      } else {\n        throw new NotFoundException(`Id ${id} not found`);\n      }\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(`Invalid id ${id}`);\n    }\n  }\n\n  async getByEmail(email: string): Promise {\n    try {\n      const valid = isEmail(email);\n      if (valid) {\n        const user = await this.repository.getByEmail(email);\n        if (user != null || user != undefined) {\n          return mapUser(user);\n        }\n      } else {\n        throw new NotFoundException(`Email ${email} not found`);\n      }\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(`Invalid email ${email}`);\n    }\n  }\n\n  async hashedPassword(password: string): Promise {\n    return await bcrypt.hash(password, 10);\n  }\n\n  async create(user: CreateUserDto): Promise {\n    try {\n      const errors = await validate(user);\n      if (errors.length > 0) {\n        throw new BadRequestException(errors);\n      }\n      const existis = await this.getByEmail(user.email);\n      if (!existis) {\n        user.password = await this.hashedPassword(user.password);\n        return await this.repository.create(user);\n      } else {\n        throw new BadRequestException(\n          `User with email ${user.email} already exists`\n        );\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        this.logger.error(error);\n        throw new BadRequestException(error.message);\n      }\n    }\n  }\n\n  async update(id: string, user: UserDto): Promise {\n    try {\n      const result = await this.repository.getById(id);\n      if (result !== undefined) {\n        return await this.repository.update(id, user);\n      } else {\n        throw new NotFoundException(`User id ${id} not found`);\n      }\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(`Update user id ${id} failed`);\n    }\n  }\n\n  transformString(arr: any): string {\n    const mergedProps: Record = {};\n\n    arr.forEach((obj) => {\n      for (const prop in obj) {\n        if (mergedProps[prop]) {\n          mergedProps[prop].push(obj[prop]);\n        } else {\n          mergedProps[prop] = [obj[prop]];\n        }\n      }\n    });\n\n    const result = Object.entries(mergedProps).map(\n      ([prop, messages]) => `${prop}: ${messages.join(', ')}`\n    );\n\n    return result.join('\\n');\n  }\n\n  async updateShape(id: string, shape: ShapeHistoryDto): Promise {\n    const shapeHistoryDto = new ShapeHistoryDto();\n    shapeHistoryDto.age = new Date(shape.age);\n    shapeHistoryDto.height = shape.height;\n    shapeHistoryDto.weight = shape.weight;\n    shapeHistoryDto.bmi = shape.bmi;\n\n    const validObj = validate(shapeHistoryDto)\n      .then((errors) => {\n        if (errors.length > 0) {\n          const arr = errors.map((error) => error.constraints);\n          const str = this.transformString(arr);\n          this.logger.error(str);\n          return false;\n        } else {\n          return true;\n        }\n      })\n      .catch((error) => {\n        this.logger.error(error);\n        throw new BadRequestException(error);\n      });\n\n    if ((await validObj) === true) {\n      const user = this.getById(id);\n      if (user !== undefined) {\n        await this.repository.updateShape(id, shape);\n      }\n    } else {\n      throw new BadRequestException();\n    }\n  }\n\n  async delete(id: string): Promise {\n    try {\n      const result = await this.repository.getById(id);\n      if (result !== undefined) {\n        return await this.repository.delete(id);\n      }\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(`Delete user id ${id} failed`);\n    }\n  }\n\n  async enable(id: string): Promise {\n    try {\n      const user = await this.getById(id);\n      if (user !== undefined) {\n        await this.repository.enable(id);\n        return `${id} enabled`;\n      }\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(`Enable user id ${id} failed`);\n    }\n  }\n\n  async disable(id: string): Promise {\n    try {\n      const user = await this.getById(id);\n      if (user !== undefined) {\n        await this.repository.disable(id);\n        return `${id} disabled`;\n      }\n    } catch (error) {\n      this.logger.error(error);\n      throw new BadRequestException(`Disable user id ${id} failed`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.model.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.model.ts\n            \n            variable\n            AuthSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.repository.ts\n            \n            injectable\n            AuthRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.controller.interface.ts\n            \n            interface\n            IAuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.controller.interface.ts\n            \n            variable\n            AUTH_CONTROLLER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.repository.interface.ts\n            \n            interface\n            IAuthRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.repository.interface.ts\n            \n            variable\n            AUTH_REPOSITORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.service.interface.ts\n            \n            interface\n            IAuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.service.interface.ts\n            \n            variable\n            AUTH_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/utils/credentials.utils.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/exercises/dtos/create-exercises.dto.ts\n            \n            class\n            CreateExerciseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/exercises/dtos/exercise.dto.ts\n            \n            class\n            ExerciseDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/exercises/exercise.model.ts\n            \n            class\n            Exercise\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/exercises/exercise.model.ts\n            \n            variable\n            ExerciseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/exercises/exercises.controller.ts\n            \n            controller\n            ExercisesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/exercises/exercises.repository.ts\n            \n            injectable\n            ExercisesRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/exercises/exercises.service.ts\n            \n            injectable\n            ExercisesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/exercises/interfaces/exercises.controller.interface.ts\n            \n            interface\n            IExercisesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/exercises/interfaces/exercises.controller.interface.ts\n            \n            variable\n            EXERCISES_CONTROLLER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/exercises/interfaces/exercises.repository.interface.ts\n            \n            interface\n            IExercisesRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/exercises/interfaces/exercises.repository.interface.ts\n            \n            variable\n            EXERCISES_REPOSITORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/exercises/interfaces/exercises.service.interface.ts\n            \n            interface\n            IExercisesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/exercises/interfaces/exercises.service.interface.ts\n            \n            variable\n            EXERCISES_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/exercises/utils/exercise.mapper.ts\n            \n            variable\n            mapExercise\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/plans/dtos/create-plan.dto.ts\n            \n            class\n            CreatePlanDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/plans/dtos/plan.dto.ts\n            \n            class\n            PlanDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/plans/interfaces/plans.controller.interface.ts\n            \n            variable\n            PLANS_CONTROLLER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/plans/interfaces/plans.repository.interface.ts\n            \n            interface\n            IPlansRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/plans/interfaces/plans.repository.interface.ts\n            \n            variable\n            PLANS_REPOSITORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/plans/interfaces/plans.service.interface.ts\n            \n            interface\n            IPlansService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/plans/interfaces/plans.service.interface.ts\n            \n            variable\n            PLANS_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/plans/plan.model.ts\n            \n            class\n            Plan\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/plans/plan.model.ts\n            \n            variable\n            PlanSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/plans/plans.controller.ts\n            \n            controller\n            PlansController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/plans/plans.repository.ts\n            \n            injectable\n            PlansRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/plans/plans.service.ts\n            \n            injectable\n            PlansService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/routines/routine.model.ts\n            \n            class\n            Routine\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/routines/routine.model.ts\n            \n            variable\n            RoutineSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/routines/routines.controller.ts\n            \n            controller\n            RoutinesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/routines/routines.repository.ts\n            \n            injectable\n            RoutinesRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/routines/routines.service.ts\n            \n            injectable\n            RoutinesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/dtos/params.dto.ts\n            \n            class\n            ParamsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/shared/dtos/training.dto.ts\n            \n            class\n            TrainingDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/shared/interfaces/default.controller.interface.ts\n            \n            interface\n            IDefaultController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/shared/models/training.model.ts\n            \n            class\n            Training\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/shared/models/training.model.ts\n            \n            variable\n            TrainingSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/build-params.utils.ts\n            \n            variable\n            buildParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/http-response-status.utils.ts\n            \n            variable\n            BAD_REQUEST_400\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/http-response-status.utils.ts\n            \n            variable\n            CREATED_201\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/http-response-status.utils.ts\n            \n            variable\n            NO_CONTENT_204\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/http-response-status.utils.ts\n            \n            variable\n            NOT_FOUND_404\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/http-response-status.utils.ts\n            \n            variable\n            OK_200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/http-response-status.utils.ts\n            \n            variable\n            SERVER_ERROR_500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/shared/utils/http-response-status.utils.ts\n            \n            variable\n            UNAUTHORIZED_401\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/shape-history.dto.ts\n            \n            class\n            ShapeHistoryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/interfaces/users.controller.interface.ts\n            \n            interface\n            IUsersController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/interfaces/users.controller.interface.ts\n            \n            variable\n            USERS_CONTROLLER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/interfaces/users.repository.interface.ts\n            \n            interface\n            IUsersRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/users/interfaces/users.repository.interface.ts\n            \n            variable\n            USERS_REPOSITORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/interfaces/users.service.interface.ts\n            \n            interface\n            IUsersService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/users/interfaces/users.service.interface.ts\n            \n            variable\n            USERS_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/shape-history.ts\n            \n            class\n            ShapeHistory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/shape-history.ts\n            \n            variable\n            ShapeHistorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/user.model.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/users.repository.ts\n            \n            injectable\n            UsersRepository\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/users/utils/user.mapper.ts\n            \n            variable\n            mapUser\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.4.0\n        \n            @nestjs/config : ^2.3.2\n        \n            @nestjs/core : ^9.4.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mongoose : ^9.2.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.4.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.1.0\n        \n            jsonwebtoken : ^9.0.0\n        \n            mongoose : ^7.1.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nDescrição\nAPI/Back-end da aplicação To-do Gym.\nUma aplicação web para controle de treinos, rotinas, evolução física e musculação na academia, além de demonstração da execução de exercícios físicos.\nDesenvolvida com TypeScript em NodeJS com o framework Nest.\nModelagem de Banco de Dados\n\n  \n\n\nAcesse Draw IO\nFuncionalidades\n\n  \n\n\nAcesse Miro\nDocumentação da API com Swagger\nhttps://todo-gym-api.onrender.com/swagger/\nTecnologias Utilizadas\nLinguagem: TypeScript\nBack-end: NodeJS\nFramework Node: NestJS\nBanco de Dados: MongoDB\nODM Mongoose\nDocumentação API Rest: Swagger\nDocumentação Modular Estática: Compodoc\nDiagramação Banco de Dados: Draw IO\nDesenho de Fluxos: Miro\nInstalação\nnpm installPara executar o projeto\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTestes\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSobre mim\n\nAuthor - Flávio Oliveira\nPortfólio - https://flaviosoliver-portfolio.vercel.app/\nLinkedIn - https://www.linkedin.com/in/flaviosoliver/\nEmail - flavsoliver@gmail.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExercisesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlansModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutinesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RoutinesModule\n\n\n\ncluster_RoutinesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nExercisesModule\n\nExercisesModule\n\n\n\nPlansModule\n\nPlansModule\n\nPlansModule -->\n\nExercisesModule->PlansModule\n\n\n\nAppModule -->\n\nExercisesModule->AppModule\n\n\n\nAppModule -->\n\nPlansModule->AppModule\n\n\n\n\n\nRoutinesModule\n\nRoutinesModule\n\nAppModule -->\n\nRoutinesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nRoutinesService\n\nRoutinesService\n\nRoutinesModule -->\n\nRoutinesService->RoutinesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthDocument   (src/.../auth.model.ts)\n                        \n                        \n                            ExerciseDocument   (src/.../exercise.model.ts)\n                        \n                        \n                            PlanDocument   (src/.../plan.model.ts)\n                        \n                        \n                            RoutineDocument   (src/.../routine.model.ts)\n                        \n                        \n                            ShapeHistoryDocument   (src/.../shape-history.ts)\n                        \n                        \n                            TrainingDocument   (src/.../training.model.ts)\n                        \n                        \n                            UserDocument   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/auth/auth.model.ts\n    \n    \n        \n            \n                \n                    \n                    AuthDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/exercises/exercise.model.ts\n    \n    \n        \n            \n                \n                    \n                    ExerciseDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/plans/plan.model.ts\n    \n    \n        \n            \n                \n                    \n                    PlanDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/routines/routine.model.ts\n    \n    \n        \n            \n                \n                    \n                    RoutineDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/users/shape-history.ts\n    \n    \n        \n            \n                \n                    \n                    ShapeHistoryDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/shared/models/training.model.ts\n    \n    \n        \n            \n                \n                    \n                    TrainingDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/users/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_CONTROLLER   (src/.../auth.controller.interface.ts)\n                        \n                        \n                            AUTH_REPOSITORY   (src/.../auth.repository.interface.ts)\n                        \n                        \n                            AUTH_SERVICE   (src/.../auth.service.interface.ts)\n                        \n                        \n                            AuthSchema   (src/.../auth.model.ts)\n                        \n                        \n                            BAD_REQUEST_400   (src/.../http-response-status.utils.ts)\n                        \n                        \n                            buildParams   (src/.../build-params.utils.ts)\n                        \n                        \n                            comparePasswords   (src/.../credentials.utils.ts)\n                        \n                        \n                            CREATED_201   (src/.../http-response-status.utils.ts)\n                        \n                        \n                            EXERCISES_CONTROLLER   (src/.../exercises.controller.interface.ts)\n                        \n                        \n                            EXERCISES_REPOSITORY   (src/.../exercises.repository.interface.ts)\n                        \n                        \n                            EXERCISES_SERVICE   (src/.../exercises.service.interface.ts)\n                        \n                        \n                            ExerciseSchema   (src/.../exercise.model.ts)\n                        \n                        \n                            mapExercise   (src/.../exercise.mapper.ts)\n                        \n                        \n                            mapUser   (src/.../user.mapper.ts)\n                        \n                        \n                            NO_CONTENT_204   (src/.../http-response-status.utils.ts)\n                        \n                        \n                            NOT_FOUND_404   (src/.../http-response-status.utils.ts)\n                        \n                        \n                            OK_200   (src/.../http-response-status.utils.ts)\n                        \n                        \n                            PLANS_CONTROLLER   (src/.../plans.controller.interface.ts)\n                        \n                        \n                            PLANS_REPOSITORY   (src/.../plans.repository.interface.ts)\n                        \n                        \n                            PLANS_SERVICE   (src/.../plans.service.interface.ts)\n                        \n                        \n                            PlanSchema   (src/.../plan.model.ts)\n                        \n                        \n                            RoutineSchema   (src/.../routine.model.ts)\n                        \n                        \n                            SERVER_ERROR_500   (src/.../http-response-status.utils.ts)\n                        \n                        \n                            ShapeHistorySchema   (src/.../shape-history.ts)\n                        \n                        \n                            TrainingSchema   (src/.../training.model.ts)\n                        \n                        \n                            UNAUTHORIZED_401   (src/.../http-response-status.utils.ts)\n                        \n                        \n                            USERS_CONTROLLER   (src/.../users.controller.interface.ts)\n                        \n                        \n                            USERS_REPOSITORY   (src/.../users.repository.interface.ts)\n                        \n                        \n                            USERS_SERVICE   (src/.../users.service.interface.ts)\n                        \n                        \n                            UserSchema   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/auth/interfaces/auth.controller.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_CONTROLLER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AUTH_CONTROLLER'\n                    \n                \n\n\n        \n    \n\n    src/modules/auth/interfaces/auth.repository.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_REPOSITORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AUTH_REPOSITORY'\n                    \n                \n\n\n        \n    \n\n    src/modules/auth/interfaces/auth.service.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AUTH_SERVICE'\n                    \n                \n\n\n        \n    \n\n    src/modules/auth/auth.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Auth)\n                    \n                \n\n\n        \n    \n\n    src/modules/shared/utils/http-response-status.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BAD_REQUEST_400\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BAD REQUEST'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CREATED_201\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CREATED'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NO_CONTENT_204\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NO CONTENT'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_404\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NOT FOUND'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OK_200\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OK'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_ERROR_500\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'INTERNAL SERVER ERROR'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNAUTHORIZED_401\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UNAUTHORIZED'\n                    \n                \n\n\n        \n    \n\n    src/modules/shared/utils/build-params.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (params?: ParamsDto): any => {\n  const opt: any = { $or: [] };\n\n  if (params && params.name) {\n    opt.$or.push({ name: { $regex: params.name, $options: 'i' } });\n  }\n\n  if (params && params.focusMuscle?.length > 0) {\n    opt.$or.push({ focusMuscle: { $in: params.focusMuscle } });\n  } else {\n    opt.$or.focusMuscle = [];\n  }\n\n  return opt;\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/auth/utils/credentials.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  passwordLogin: string,\n  passwordUser: string\n): Promise => {\n  return await bcrypt.compare(passwordLogin, passwordUser);\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/exercises/interfaces/exercises.controller.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXERCISES_CONTROLLER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'EXERCISES_CONTROLLER'\n                    \n                \n\n\n        \n    \n\n    src/modules/exercises/interfaces/exercises.repository.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXERCISES_REPOSITORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'EXERCISES_REPOSITORY'\n                    \n                \n\n\n        \n    \n\n    src/modules/exercises/interfaces/exercises.service.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXERCISES_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'EXERCISES_SERVICE'\n                    \n                \n\n\n        \n    \n\n    src/modules/exercises/exercise.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExerciseSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Exercise)\n                    \n                \n\n\n        \n    \n\n    src/modules/exercises/utils/exercise.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapExercise\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exercise: Exercise): ExerciseDto => {\n  return {\n    id: exercise.id,\n    name: exercise.name,\n    focusMuscle: exercise.focusMuscle,\n    image: exercise.image,\n    video: exercise.video,\n    notes: exercise.notes,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/users/utils/user.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (user: User): UserDto => {\n  return {\n    id: user.id,\n    email: user.email,\n    password: user.password,\n    firstName: user.firstName,\n    lastName: user.lastName,\n    birthDate: user.birthDate,\n    active: user.active,\n    shape: user.shape,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/plans/interfaces/plans.controller.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PLANS_CONTROLLER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PLANS_CONTROLLER'\n                    \n                \n\n\n        \n    \n\n    src/modules/plans/interfaces/plans.repository.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PLANS_REPOSITORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PLANS_REPOSITORY'\n                    \n                \n\n\n        \n    \n\n    src/modules/plans/interfaces/plans.service.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PLANS_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PLANS_SERVICE'\n                    \n                \n\n\n        \n    \n\n    src/modules/plans/plan.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PlanSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Plan)\n                    \n                \n\n\n        \n    \n\n    src/modules/routines/routine.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoutineSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Routine)\n                    \n                \n\n\n        \n    \n\n    src/modules/users/shape-history.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ShapeHistorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ShapeHistory)\n                    \n                \n\n\n        \n    \n\n    src/modules/shared/models/training.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TrainingSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Training)\n                    \n                \n\n\n        \n    \n\n    src/modules/users/interfaces/users.controller.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USERS_CONTROLLER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USERS_CONTROLLER'\n                    \n                \n\n\n        \n    \n\n    src/modules/users/interfaces/users.repository.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USERS_REPOSITORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USERS_REPOSITORY'\n                    \n                \n\n\n        \n    \n\n    src/modules/users/interfaces/users.service.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USERS_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USERS_SERVICE'\n                    \n                \n\n\n        \n    \n\n    src/modules/users/user.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
